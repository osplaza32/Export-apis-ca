<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:AuditDetailAssertion>
            <L7p:Detail stringValue="Policy Fragment: Reload Account Plans Fragment"/>
        </L7p:AuditDetailAssertion>
        <L7p:SetVariable>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// failure errorCode"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:Base64Expression stringValue="NTAw"/>
            <L7p:VariableToSet stringValue="errorCode"/>
        </L7p:SetVariable>
        <L7p:XslTransformation>
            <L7p:Direction intValue="-1"/>
            <L7p:OtherTargetMessageVariable stringValue="accountPlans"/>
            <L7p:ResourceInfo staticResourceInfo="included">
                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:l7="http://ns.l7tech.com/2012/04/api-management" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:param name="gateway.time" select="'now'"/>
                <xsl:param name="gateway.portal.useHalfAsync" select="'true'"/>
                <xsl:output indent="yes" method="xml" omit-xml-declaration="yes"/>
                <xsl:strip-space elements="*"/>
                <xsl:template match="/">
                <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="Policy Fragment: Account Plans Fragment"/>
                </L7p:AuditDetailAssertion>
                <L7p:CommentAssertion>
                <L7p:Comment stringValue="// This fragment is auto generated by the gateway. DO NOT MODIFY"/>
                </L7p:CommentAssertion>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthcGlLZXl9"/>
                <L7p:VariableToSet stringValue="apiKey"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthY2NvdW50UGxhbk1hcHBpbmdJZH0="/>
                <L7p:VariableToSet stringValue="accountPlanMappingId"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="ZmFsc2U="/>
                <L7p:VariableToSet stringValue="apiAuthz"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="Tm90IFNldA=="/>
                <L7p:VariableToSet stringValue="apiAuthzDetails"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                <xsl:apply-templates select="l7:AccountPlans/l7:AccountPlan[l7:DefaultPlan = 'false']"/>
                <xsl:apply-templates select="l7:AccountPlans/l7:AccountPlan[l7:DefaultPlan = 'true']"/>
                <!-- accountPlanMappingId not found [start] -->
                <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                <L7p:CaseSensitive booleanValue="false"/>
                <xsl:element name="L7p:Expression1">
                <xsl:attribute name="stringValue">&#36;{apiAuthzDetails}</xsl:attribute>
                </xsl:element>
                <L7p:Operator operatorNull="null"/>
                <L7p:Predicates predicates="included">
                <L7p:item dataType="included">
                <L7p:Type variableDataType="string"/>
                </L7p:item>
                <L7p:item binary="included">
                <L7p:RightValue stringValue="Not Set"/>
                </L7p:item>
                </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="ZmFsc2U="/>
                <L7p:VariableToSet stringValue="apiAuthz"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthcGlLZXl9fCR7YWNjb3VudFBsYW5NYXBwaW5nSWR9IEFjY291bnRQbGFuTWFwcGluZ0lkIG5vdCBmb3VuZA=="/>
                <L7p:VariableToSet stringValue="apiAuthzDetails"/>
                </L7p:SetVariable>
                <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                <L7p:entry>
                <L7p:key stringValue="RIGHT.COMMENT"/>
                <L7p:value stringValue="//accountPlanMappingId not found"/>
                </L7p:entry>
                </L7p:Properties>
                </L7p:assertionComment>
                </wsp:All>
                <!-- accountPlanMappingId not found [end] -->
                </wsp:OneOrMore>
                <L7p:CommentAssertion>
                <xsl:element name="L7p:Comment">
                <xsl:attribute name="stringValue">Updated on <xsl:value-of select="$gateway.time"/></xsl:attribute>
                </xsl:element>
                </L7p:CommentAssertion>
                <L7p:ExportVariables>
                <L7p:ExportedVars stringArrayValue="included">
                <L7p:item stringValue="apiAuthz"/>
                <L7p:item stringValue="apiAuthzDetails"/>
                <L7p:item stringValue="accountPlanId"/>
                <L7p:item stringValue="accountPlanName"/>
                <L7p:item stringValue="quota"/>
                <L7p:item stringValue="timeUnit"/>
                </L7p:ExportedVars>
                </L7p:ExportVariables>
                </wsp:All>
                </wsp:Policy>
                </xsl:template>

                <xsl:template match="l7:AccountPlan">
                <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                <L7p:CaseSensitive booleanValue="false"/>
                <xsl:element name="L7p:Expression1">
                <xsl:attribute name="stringValue">&#36;{accountPlanMappingId}</xsl:attribute>
                </xsl:element>
                <L7p:Operator operatorNull="null"/>
                <L7p:Predicates predicates="included">
                <L7p:item dataType="included">
                <L7p:Type variableDataType="string"/>
                </L7p:item>
                <L7p:item binary="included">
                <L7p:CaseSensitive booleanValue="false"/>
                <L7p:Negated booleanValue="true"/>
                <L7p:Operator operator="EMPTY"/>
                <L7p:RightValue stringValue=""/>
                </L7p:item>
                </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ComparisonAssertion>
                <L7p:CaseSensitive booleanValue="false"/>
                <xsl:element name="L7p:Expression1">
                <xsl:attribute name="stringValue">&#36;{apiAuthzDetails}</xsl:attribute>
                </xsl:element>
                <L7p:Operator operatorNull="null"/>
                <L7p:Predicates predicates="included">
                <L7p:item dataType="included">
                <L7p:Type variableDataType="string"/>
                </L7p:item>
                <L7p:item binary="included">
                <L7p:RightValue stringValue="Not Set"/>
                </L7p:item>
                </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                <xsl:choose>
                <xsl:when test="l7:DefaultPlan/text() = 'true'"><L7p:TrueAssertion/></xsl:when>
                <xsl:when test="not(l7:PlanMapping/l7:Ids)"><L7p:FalseAssertion/></xsl:when>
                <xsl:otherwise><xsl:apply-templates/></xsl:otherwise>
                </xsl:choose>
                </wsp:OneOrMore>
                <L7p:SetVariable>
                  <xsl:element name="L7p:Expression">
                  <xsl:attribute name="stringValue"><xsl:value-of select="l7:PlanId"/></xsl:attribute>
                  </xsl:element>
                  <L7p:VariableToSet stringValue="accountPlanId"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                  <xsl:element name="L7p:Expression">
                  <xsl:attribute name="stringValue"><xsl:value-of select="l7:PlanName"/></xsl:attribute>
                  </xsl:element>
                  <L7p:VariableToSet stringValue="accountPlanName"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthcGlBdXRoekRldGFpbHN9fCR7YXBpS2V5fXwke2FjY291bnRQbGFuTWFwcGluZ0lkfXxxdW90YT8="/>
                <L7p:VariableToSet stringValue="apiAuthzDetails"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <xsl:element name="L7p:Expression">
                <xsl:attribute name="stringValue">
                <xsl:choose>
                <xsl:when test="l7:PlanDetails/l7:ThroughputQuota/l7:Quota=''">100000</xsl:when>
                <xsl:otherwise><xsl:value-of select="l7:PlanDetails/l7:ThroughputQuota/l7:Quota"/></xsl:otherwise>
                </xsl:choose>
                </xsl:attribute>
                </xsl:element>
                <L7p:VariableToSet stringValue="quota"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <xsl:element name="L7p:Expression">
                <xsl:attribute name="stringValue">
                <xsl:choose>
                <xsl:when test="l7:PlanDetails/l7:ThroughputQuota/@l7:enabled='false'"></xsl:when>
                <xsl:otherwise><xsl:value-of select="l7:PlanDetails/l7:ThroughputQuota/l7:TimeUnit"/></xsl:otherwise>
                </xsl:choose>
                </xsl:attribute>
                </xsl:element>
                <L7p:VariableToSet stringValue="timeUnit"/>
                </L7p:SetVariable>
                <xsl:variable name="param.throughputQuotaName">
                <xsl:choose>
                <xsl:when test="$gateway.portal.useHalfAsync='true'">
                <xsl:value-of select="'L7p:HalfAsyncThroughputQuota'"/>
                </xsl:when>
                <xsl:otherwise>
                <xsl:value-of select="'L7p:ThroughputQuota'"/>
                </xsl:otherwise>
                </xsl:choose>
                </xsl:variable>
                <xsl:element name="{$param.throughputQuotaName}">
                <xsl:element name="L7p:CounterName">
                <xsl:attribute name="stringValue">&#36;{accountPlanMappingId}</xsl:attribute>
                </xsl:element>
                <xsl:if test="l7:PlanDetails/l7:ThroughputQuota/@l7:enabled='false'">
                <L7p:Enabled booleanValue="false"/>
                </xsl:if>
                <L7p:Global booleanValue="true"/>
                <L7p:ReadSynchronous booleanValue="false"/>
                <L7p:Synchronous booleanValue="false"/>
                <xsl:element name="L7p:Quota">
                <xsl:attribute name="stringValue">&#36;{quota}</xsl:attribute>
                </xsl:element>
                <xsl:element name="L7p:TimeUnit">
                <xsl:attribute name="intValue">
                <xsl:choose>
                <xsl:when test="l7:PlanDetails/l7:ThroughputQuota/l7:TimeUnit='0'">4</xsl:when>
                <xsl:otherwise><xsl:value-of select="l7:PlanDetails/l7:ThroughputQuota/l7:TimeUnit"/></xsl:otherwise>
                </xsl:choose>
                </xsl:attribute>
                </xsl:element>
                <xsl:element name="L7p:CounterStrategy">
                <xsl:attribute name="intValue"><xsl:value-of select="l7:PlanDetails/l7:ThroughputQuota/l7:CounterStrategy"/></xsl:attribute>
                </xsl:element>
                </xsl:element>
                <xsl:element name="L7p:RateLimit">
                <xsl:element name="L7p:CounterName">
                <xsl:attribute name="stringValue">&#36;{accountPlanMappingId}</xsl:attribute>
                </xsl:element>
                <xsl:if test="l7:PlanDetails/l7:RateLimit/@l7:enabled='false'">
                <L7p:Enabled booleanValue="false"/>
                </xsl:if>
                <xsl:element name="L7p:MaxRequestsPerSecond">
                <xsl:attribute name="stringValue"><xsl:value-of select="l7:PlanDetails/l7:RateLimit/l7:MaxRequestRate"/></xsl:attribute>
                </xsl:element>
                <xsl:element name="L7p:HardLimit">
                <xsl:attribute name="booleanValue"><xsl:choose>
                <xsl:when test="l7:PlanDetails/l7:RateLimit/l7:HardLimit=''">true</xsl:when>
                <xsl:otherwise><xsl:value-of select="l7:PlanDetails/l7:RateLimit/l7:HardLimit"/></xsl:otherwise>
                </xsl:choose></xsl:attribute>
                </xsl:element>
                <xsl:element name="L7p:WindowSizeInSeconds">
                <xsl:attribute name="stringValue"><xsl:choose>
                <xsl:when test="l7:PlanDetails/l7:RateLimit/l7:WindowSizeInSeconds=''">60</xsl:when>
                <xsl:otherwise><xsl:value-of select="l7:PlanDetails/l7:RateLimit/l7:WindowSizeInSeconds"/></xsl:otherwise>
                </xsl:choose></xsl:attribute>
                </xsl:element>
                </xsl:element>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthcGlBdXRoekRldGFpbHN9b2t8cmF0ZT8="/>
                <L7p:VariableToSet stringValue="apiAuthzDetails"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                <L7p:VariableToSet stringValue="apiAuthz"/>
                </L7p:SetVariable>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthcGlBdXRoekRldGFpbHN9ZmFpbGVk"/>
                <L7p:VariableToSet stringValue="apiAuthzDetails"/>
                </L7p:SetVariable>
                </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                <L7p:entry>
                <L7p:key stringValue="RIGHT.COMMENT"/>
                <xsl:element name="L7p:value">
                <xsl:attribute name="stringValue"><xsl:value-of select="l7:PlanName"/>:<xsl:value-of select="l7:PlanId"/><xsl:if test="l7:DefaultPlan='true'">(Default)</xsl:if></xsl:attribute>
                </xsl:element>
                </L7p:entry>
                </L7p:Properties>
                </L7p:assertionComment>
                </wsp:All>
                </xsl:template>

                <xsl:template match="l7:PlanId">
                </xsl:template>
                <xsl:template match="l7:PlanName">
                </xsl:template>
                <xsl:template match="l7:DefaultPlan">
                </xsl:template>
                <xsl:template match="l7:PlanDetails">
                </xsl:template>

                <xsl:template match="l7:PlanMapping">
                <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                <!--
                <L7p:Expression stringValue="10,20,30"/>
                -->
                <xsl:element name="L7p:Expression">
                <xsl:attribute name="stringValue">
                <xsl:apply-templates/>
                </xsl:attribute>
                </xsl:element>
                <L7p:VariableToSet stringValue="orgIds"/>
                </L7p:SetVariable>
                <L7p:Split>
                <L7p:IgnoreEmptyValues booleanValue="true"/>
                <L7p:InputVariable stringValue="orgIds"/>
                <L7p:OutputVariable stringValue="orgIdsSplit"/>
                </L7p:Split>
                <L7p:IndexLookupByItem>
                <L7p:MultivaluedVariableName stringValue="orgIdsSplit"/>
                <L7p:OutputVariableName stringValue="matchIndex"/>
                <L7p:ValueToSearchForVariableName stringValue="accountPlanMappingId"/>
                </L7p:IndexLookupByItem>
                </wsp:All>
                </xsl:template>

                <xsl:template match="l7:Ids"><xsl:value-of select="text()"/></xsl:template>
                </xsl:stylesheet>]]></L7p:Document>
            </L7p:ResourceInfo>
            <L7p:Target target="OTHER"/>
            <L7p:TransformName stringValue=""/>
            <L7p:XsltVersion stringValue="1.0"/>
        </L7p:XslTransformation>
        <L7p:SetVariable>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// successful errorCode"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:Base64Expression stringValue="MA=="/>
            <L7p:VariableToSet stringValue="errorCode"/>
        </L7p:SetVariable>
        <wsp:All wsp:Usage="Required">
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthY2NvdW50UGxhbnMubWFpbnBhcnR9"/>
                <L7p:VariableToSet stringValue="pman.resource"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtnYXRld2F5LnBvcnRhbC5hY2NvdW50LnBsYW5zLmZyYWdtZW50Lmd1aWR9"/>
                <L7p:VariableToSet stringValue="pman.options.policyGUID"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtwbWFuLnJlc1VyaX0="/>
                <L7p:VariableToSet stringValue="pman.resUri.orig"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtwbWFuLm9wZXJhdGlvbn0="/>
                <L7p:VariableToSet stringValue="pman.operation.orig"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="//query all API Plans for processing"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:Base64Expression stringValue="LzEvcG9saWN5L3VwZGF0ZQ=="/>
                <L7p:VariableToSet stringValue="pman.resUri"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="UFVU"/>
                <L7p:VariableToSet stringValue="pman.operation"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtnYXRld2F5LnBvcnRhbC5hY2NvdW50cGxhbnMuZGlzYWJsZVhTTFRWYWxpZGF0ZX0="/>
                <L7p:VariableToSet stringValue="pman.options.disableValidate"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="ZmFsc2U="/>
                <L7p:VariableToSet stringValue="pman.options.asyncUpdate"/>
            </L7p:SetVariable>
            <L7p:ManagePortalResource/>
            <L7p:SetVariable>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// successful errorCode"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:Base64Expression stringValue="MA=="/>
                <L7p:VariableToSet stringValue="errorCode"/>
            </L7p:SetVariable>
        </wsp:All>
    </wsp:All>
</wsp:Policy>