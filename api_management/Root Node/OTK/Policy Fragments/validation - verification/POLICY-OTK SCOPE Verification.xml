<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" ============================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === If you have the need to customize this policy"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" ============================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="This policy validates SCOPE"/>
        </L7p:CommentAssertion>
        <L7p:SetVariable>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="resetting any context variable to handle cases where it is not defined"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:Base64Expression stringValue="JHthbnl9"/>
            <L7p:VariableToSet stringValue="any"/>
        </L7p:SetVariable>
        <L7p:SetVariable>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="LEFT.COMMENT"/>
                        <L7p:value stringValue="initialize"/>
                    </L7p:entry>
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="will be overwritten in the case of an error"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:Base64Expression stringValue=""/>
            <L7p:VariableToSet stringValue="error.code"/>
        </L7p:SetVariable>
        <L7p:Split>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="LEFT.COMMENT"/>
                        <L7p:value stringValue="valid SCOPE"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:InputVariable stringValue="scope.granted"/>
            <L7p:OutputVariable stringValue="scopeGranted"/>
            <L7p:SplitPattern stringValue="[ ]"/>
        </L7p:Split>
        <L7p:Split>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="LEFT.COMMENT"/>
                        <L7p:value stringValue="required SCOPE"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:InputVariable stringValue="scope.required"/>
            <L7p:OutputVariable stringValue="scopeRequired"/>
            <L7p:SplitPattern stringValue="[ ]"/>
        </L7p:Split>
        <wsp:OneOrMore wsp:Usage="Required">
            <L7p:ComparisonAssertion>
                <L7p:Expression1 stringValue="${scope.required}"/>
                <L7p:Expression2 stringValue=""/>
                <L7p:Operator operator="EMPTY"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:Operator operator="EMPTY"/>
                        <L7p:RightValue stringValue=""/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <wsp:All wsp:Usage="Required">
                <L7p:ForEachLoop L7p:Usage="Required"
                    iterationLimit="100" loopVariable="scopeRequired" variablePrefix="verifyScope">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="ZmFsc2U="/>
                        <L7p:VariableToSet stringValue="found"/>
                    </L7p:SetVariable>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:Expression1 stringValue="${scopeGranted}"/>
                                <L7p:Expression2 stringValue="${verifyScope.current}"/>
                                <L7p:MultivaluedComparison multivaluedComparison="ANY"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="${verifyScope.current}"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${any}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                                    <L7p:VariableToSet stringValue="verifyScope.break"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="any"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="pass and break from iteration if any scopes are found"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${any}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Operator operator="NE"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="all"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="if we want to ensure all scopes match, we need to keep iterating"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                            </wsp:OneOrMore>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                                <L7p:VariableToSet stringValue="found"/>
                            </L7p:SetVariable>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:Expression1 stringValue="${scopeGranted}"/>
                                <L7p:Expression2 stringValue="${verifyScope.current}"/>
                                <L7p:MultivaluedComparison multivaluedComparison="ANY"/>
                                <L7p:Operator operator="NE"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="${verifyScope.current}"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${any}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Operator operator="NE"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="ZmFsc2U="/>
                                    <L7p:VariableToSet stringValue="found"/>
                                    </L7p:SetVariable>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                                    <L7p:VariableToSet stringValue="verifyScope.break"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="all"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="if we require all scopes to be found, and we find a scope that doesn't match, break"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${any}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="any"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="continue iterating if 'any' flag is true"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="validate"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="LEFT.COMMENT"/>
                                <L7p:value stringValue="iterate"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="over each SCOPE"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </L7p:ForEachLoop>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${found}"/>
                            <L7p:Expression2 stringValue="true"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${fail}"/>
                            <L7p:Expression2 stringValue="true"/>
                            <L7p:Operator operator="NE"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="pass if scopes were found and 'fail' flag is not set"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${found}"/>
                            <L7p:Expression2 stringValue="true"/>
                            <L7p:Operator operator="NE"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${fail}"/>
                            <L7p:Expression2 stringValue="true"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="pass if 'fail' flag is set and the scope is not found"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="MTE1"/>
                    <L7p:VariableToSet stringValue="error.code"/>
                </L7p:SetVariable>
                <L7p:FalseAssertion/>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="error"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="LEFT.COMMENT"/>
                        <L7p:value stringValue="verification"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>