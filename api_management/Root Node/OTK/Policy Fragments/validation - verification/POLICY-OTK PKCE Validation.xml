<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" ============================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === If you have the need to customize this policy"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" ============================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="This policy has to be used as an encapsulated assertion!"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="This policy validates a code_verifier in the context of PKCE."/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Input:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="- A JSON message as input which includes the key 'code_challenge', 'code_challenge_method'."/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="- A 'code_verifier'"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="If 'code_challenge' is empty no validation will be done."/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Output:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="- 'error.code' in the case of an error"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="*"/>
        </L7p:CommentAssertion>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="JHtzZXNzaW9ufQ=="/>
            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
            <L7p:DataType variableDataType="message"/>
            <L7p:VariableToSet stringValue="session"/>
        </L7p:SetVariable>
        <L7p:EvaluateJsonPathExpression>
            <L7p:Expression stringValue="$..code_challenge"/>
            <L7p:OtherTargetMessageVariable stringValue="session"/>
            <L7p:Target target="OTHER"/>
            <L7p:VariablePrefix stringValue="jcodeChallenge"/>
        </L7p:EvaluateJsonPathExpression>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="JHtqY29kZUNoYWxsZW5nZS5yZXN1bHR9"/>
            <L7p:VariableToSet stringValue="codeChallenge"/>
        </L7p:SetVariable>
        <L7p:EncodeDecode>
            <L7p:SourceVariableName stringValue="codeChallenge"/>
            <L7p:TargetDataType variableDataType="string"/>
            <L7p:TargetVariableName stringValue="codeChallenge"/>
            <L7p:TransformType transformType="URL_DECODE"/>
        </L7p:EncodeDecode>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:Expression1 stringValue="${codeChallenge}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:Negated booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${codeVerifier}"/>
                    <L7p:Operator operatorNull="null"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item regex="included">
                            <L7p:Pattern stringValue="[\w\d-_~.]{43,128}"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue="$..code_challenge_method"/>
                    <L7p:OtherTargetMessageVariable stringValue="session"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="jcodeChallengeMethod"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtqY29kZUNoYWxsZW5nZU1ldGhvZC5yZXN1bHR9"/>
                    <L7p:VariableToSet stringValue="codeChallengeMethod"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${codeChallengeMethod}"/>
                            <L7p:Expression2 stringValue="plain"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="plain"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${codeVerifier}"/>
                            <L7p:Expression2 stringValue="${codeChallenge}"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="${codeChallenge}"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="plain"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${codeChallengeMethod}"/>
                            <L7p:Expression2 stringValue="s256"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="s256"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:GenerateSecurityHash>
                            <L7p:Algorithm stringValue="SHA-256"/>
                            <L7p:Base64Data stringValue="JHtjb2RlVmVyaWZpZXJ9"/>
                            <L7p:LineBreak lineBreak="CR-LF"/>
                            <L7p:TargetOutputVariable stringValue="transformedCodeVerifier"/>
                        </L7p:GenerateSecurityHash>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="transformedCodeVerifier"/>
                            <L7p:Regex stringValue="\+"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue="-"/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="transformedCodeVerifier"/>
                            <L7p:Regex stringValue="\/"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue="_"/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="transformedCodeVerifier"/>
                            <L7p:Regex stringValue="\s|="/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${transformedCodeVerifier}"/>
                            <L7p:Expression2 stringValue="${codeChallenge}"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="${codeChallenge}"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="s256"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// Code Challenge exist"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:Expression1 stringValue="${codeChallenge}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// Code Challenge not exist"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="MTEz"/>
                    <L7p:VariableToSet stringValue="error.code"/>
                </L7p:SetVariable>
                <L7p:AuditDetailAssertion>
                    <L7p:Detail stringValue="Failed PKCE validation: given verifier: '${codeVerifier}', calculated challenge: '${transformedCodeVerifier}', expected: '${codechallenge}'"/>
                </L7p:AuditDetailAssertion>
                <L7p:FalseAssertion/>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// error"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// validate"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>