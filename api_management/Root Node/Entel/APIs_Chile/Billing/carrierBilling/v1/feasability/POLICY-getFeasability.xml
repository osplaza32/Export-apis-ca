<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:Split>
            <L7p:IgnoreEmptyValues booleanValue="true"/>
            <L7p:InputVariable stringValue="request.http.uri"/>
            <L7p:OutputVariable stringValue="uri"/>
            <L7p:SplitPattern stringValue="/"/>
        </L7p:Split>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:JdbcQuery>
                    <L7p:ConnectionName stringValue="MigrationInfoODS"/>
                    <L7p:ConvertVariablesToStrings booleanValue="false"/>
                    <L7p:MaxRecords intValue="100"/>
                    <L7p:SqlQuery stringValueReference="inline"><![CDATA[SELECT CI.BATCH_ID,
        CI.RESOURCE_TYPE,
        CI.RESOURCE_ID,
        CI.DOCUMENT_TYPE,
        CI.DOCUMENT_ID,
        CI.SUBSCRIPTION_ID,
        CI.CUSTOMER_ID,
        CI.STATE,
        CI.STATE_TIMESTAMP,
        CI.TIPO_PLAN,
        CI.BILLING_ACCOUNT_CODE
      FROM ${gateway.ods.table} CI
      WHERE (CI.RESOURCE_ID = ${uri[4]})
      OR ((CI.DOCUMENT_TYPE = '')
      AND (CI.DOCUMENT_ID = ''))]]></L7p:SqlQuery>
                    <L7p:VariablePrefix stringValue="customerInfo"/>
                </L7p:JdbcQuery>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtjdXN0b21lckluZm8uc3RhdGV9"/>
                    <L7p:VariableToSet stringValue="statusMIG.result"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtjdXN0b21lckluZm8udGlwb19wbGFufQ=="/>
                    <L7p:VariableToSet stringValue="planType.result"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtjdXN0b21lckluZm8uZG9jdW1lbnRfaWR9"/>
                    <L7p:VariableToSet stringValue="individualNumber.result"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${statusMIG.result}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item regex="included">
                                    <L7p:Pattern stringValue="NOT|MNA"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="MDMwNw=="/>
                            <L7p:VariableToSet stringValue="codeRsp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseOttEnroll.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Movil no se encuentra registrado en Entel",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="200"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:TrueAssertion/>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${statusMIG.result}"/>
                    <L7p:Operator operatorNull="null"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item dataType="included">
                            <L7p:Type variableDataType="string"/>
                        </L7p:item>
                        <L7p:item regex="included">
                            <L7p:Pattern stringValue="ACT|MIG"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <wsp:All wsp:Usage="Required">
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vR2V0Q3VzdG9tZXJHcmF5TGlzdC92MSIgeG1sbnM6djExPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9NZXNzYWdlSGVhZGVyL3YxIiB4bWxuczp2Mj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vUmVzdWx0L3YyIiB4bWxuczp2MTI9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL0Vycm9yL3YxIj4NCiAgIDxzb2FwOkhlYWRlci8+DQogICA8c29hcDpCb2R5Pg0KICAgICAgPHYxOkdldEN1c3RvbWVyR3JheUxpc3RfUkVRPg0KICAgICAgICAgPHYxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgICAgPHYxMTpDb25zdW1lciBzeXNDb2RlPSIke2dhdGV3YXkub3R0LnN5c2NvZGV9IiBlbnRlcnByaXNlQ29kZT0iRU5URUwtJHtnYXRld2F5LmNvdW50cnkuY29kZX0iIGNvdW50cnlDb2RlPSIke2dhdGV3YXkuY291bnRyeS5jb2RlfSIvPg0KICAgICAgICAgICAgPHYxMTpUcmFjZSBjbGllbnRSZXFUaW1lc3RhbXA9IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1NYWFh9IiBldmVudElEPSIke2V2ZW50SWR9Ij4NCiAgICAgICAgICAgIDwvdjExOlRyYWNlPg0KICAgICAgICAgPC92MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgIDx2MTpCb2R5Pg0KICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgPHYxOkN1c3RvbWVyPg0KICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgPHYxOkdldEN1c3RvbWVyR3JheUxpc3Q+DQogICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICA8djE6TVNJU0ROPiR7dXJpWzRdfTwvdjE6TVNJU0ROPg0KICAgICAgICAgICAgICAgPC92MTpHZXRDdXN0b21lckdyYXlMaXN0Pg0KICAgICAgICAgICAgPC92MTpDdXN0b21lcj4NCiAgICAgICAgIDwvdjE6Qm9keT4NCiAgICAgIDwvdjE6R2V0Q3VzdG9tZXJHcmF5TGlzdF9SRVE+DQogICA8L3NvYXA6Qm9keT4NCjwvc29hcDpFbnZlbG9wZT4="/>
                                <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="message"/>
                            </L7p:SetVariable>
                            <L7p:HttpRoutingAssertion>
                                <L7p:FailOnErrorStatus booleanValue="false"/>
                                <L7p:HttpMethod httpMethod="POST"/>
                                <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/GetCustomerGrayList/v1"/>
                                <L7p:ProxyPassword stringValueNull="null"/>
                                <L7p:ProxyUsername stringValueNull="null"/>
                                <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                </L7p:RequestHeaderRules>
                                <L7p:RequestMsgSrc stringValue="message"/>
                                <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                </L7p:RequestParamRules>
                                <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                </L7p:ResponseHeaderRules>
                                <L7p:ResponseMsgDest stringValue="serviceResponseGrayList"/>
                                <L7p:SamlAssertionVersion intValue="2"/>
                            </L7p:HttpRoutingAssertion>
                            <L7p:ComparisonAssertion>
                                <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                <L7p:Expression2 stringValue="200"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <L7p:XslTransformation>
                                <L7p:Direction intValue="-1"/>
                                <L7p:OtherTargetMessageVariable stringValue="serviceResponseGrayList"/>
                                <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy/>
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                                </L7p:ResourceInfo>
                                <L7p:Target target="OTHER"/>
                                <L7p:TransformName stringValue=""/>
                                <L7p:XsltVersion stringValue="1.0"/>
                            </L7p:XslTransformation>
                            <L7p:XslTransformation>
                                <L7p:Direction intValue="-1"/>
                                <L7p:MsgVarPrefix stringValue="xslt2"/>
                                <L7p:OtherTargetMessageVariable stringValue="serviceResponseGrayList"/>
                                <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.)]">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                                </L7p:ResourceInfo>
                                <L7p:Target target="OTHER"/>
                                <L7p:TransformName stringValue=""/>
                                <L7p:XsltVersion stringValue="1.0"/>
                            </L7p:XslTransformation>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2VHcmF5TGlzdC5tYWlucGFydH0="/>
                                <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="jsonRsp"/>
                            </L7p:SetVariable>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".V_OUTPUT_CODE"/>
                                <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="codeGrayList"/>
                            </L7p:EvaluateJsonPathExpression>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${codeGrayList.result}"/>
                                    <L7p:Expression2 stringValue="01"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="01"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${request.http.header.applicationCode}"/>
                                    <L7p:Expression2 stringValue="NETFLIX"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="NETFLIX"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".Result[?(@.ottPartner=='NETFLIX')].status"/>
                                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="ott"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${ott.result}"/>
                                    <L7p:Expression2 stringValue="UNBLOCKED"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="UNBLOCKED"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${ott.result}"/>
                                    <L7p:Expression2 stringValue="BLOCKED"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="BLOCKED"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMwNA=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseGrayList.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Movil presente en lista negra",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:TrueAssertion/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".Result[?(@.ottPartner=='GPLAY')].status"/>
                                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="ott"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${ott.result}"/>
                                    <L7p:Expression2 stringValue="UNBLOCKED"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="UNBLOCKED"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${ott.result}"/>
                                    <L7p:Expression2 stringValue="BLOCKED"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="BLOCKED"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMwNA=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseGrayList.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Movil presente en lista negra",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:TrueAssertion/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                </wsp:All>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                <L7p:VariableToSet stringValue="codeRsp"/>
                            </L7p:SetVariable>
                            <L7p:AuditDetailAssertion>
                                <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseGrayList.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:CustomizeErrorResponse>
                                <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - CustomerGrayList",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                <L7p:ExtraHeaders nameValuePairArray="included"/>
                            </L7p:CustomizeErrorResponse>
                            <L7p:RaiseError/>
                        </wsp:All>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_CUSTOMER_GRAY_LIST"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:JdbcQuery>
                                <L7p:AssertionFailureEnabled booleanValue="false"/>
                                <L7p:ConnectionName stringValue="CustomerBlackList"/>
                                <L7p:ConvertVariablesToStrings booleanValue="false"/>
                                <L7p:SqlQuery stringValue="SELECT COUNT(*) &quot;total&quot; from FMS_DAT.FMS_V_CUSTOMERS_BLACKLIST WHERE DOCUMENT_NUMBER=${individualNumber.result}"/>
                            </L7p:JdbcQuery>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${jdbcQuery.total}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="0"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMwNA=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Database Failed | IS STATUS: 200 | IS URI: ${httpRouting.url} | IS REQUEST: SELECT COUNT(*) &quot;total&quot; from FMS_DAT.FMS_V_CUSTOMERS_BLACKLIST WHERE DOCUMENT_NUMBER=${individualNumber.result} | IS RESPONSE: ${jdbcQuery.total} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Movil presente en lista negra",
"datetimeOperation":"${request.time.local.dd/MM/yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="MDIwMw=="/>
                                <L7p:VariableToSet stringValue="codeRsp"/>
                            </L7p:SetVariable>
                            <L7p:AuditDetailAssertion>
                                <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Database Failed | IS STATUS: 500 | IS URI: ${httpRouting.url} | IS REQUEST: SELECT COUNT(*) &quot;total&quot; from FMS_DAT.FMS_V_CUSTOMERS_BLACKLIST WHERE DOCUMENT_NUMBER=${individualNumber.result} | IS RESPONSE: Error en la BD - WEDO | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:CustomizeErrorResponse>
                                <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en conexion a base de datos - WEDO",
"datetimeOperation":"${request.time.local.dd/MM/yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                <L7p:ExtraHeaders nameValuePairArray="included"/>
                            </L7p:CustomizeErrorResponse>
                            <L7p:RaiseError/>
                        </wsp:All>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="VALIDATE_CUSTOMER_BLACK_LIST"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:JdbcQuery>
                                    <L7p:AssertionFailureEnabled booleanValue="false"/>
                                    <L7p:ConnectionName stringValue="TransGooglePlay"/>
                                    <L7p:ConvertVariablesToStrings booleanValue="false"/>
                                    <L7p:SqlQuery stringValue="SELECT TOKEN FROM TOKEN_ASSET WHERE IDTOKEN = 1"/>
                                    </L7p:JdbcQuery>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthc3NlcnRpb24ubGF0ZW5jeS5tc30="/>
                                    <L7p:VariableToSet stringValue="latencyBD"/>
                                    </L7p:SetVariable>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtqZGJjUXVlcnkuVE9LRU5bMF19"/>
                                    <L7p:VariableToSet stringValue="cwtoken"/>
                                    </L7p:SetVariable>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDIwMw=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Database Failed | IS STATUS: 500 | IS URI: ${httpRouting.url} | IS REQUEST: SELECT TOKEN FROM TOKEN_ASSET WHERE IDTOKEN = 1 | IS RESPONSE: Error en la BD - getAsset EOC | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en conexion a base de datos - AssetEOC",
"datetimeOperation":"${request.time.local.dd/MM/yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                            </wsp:OneOrMore>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:HttpRoutingAssertion>
                                    <L7p:AuthOauthTokenVar stringValue="cwtoken"/>
                                    <L7p:AuthOauthVersion stringValue="2.0"/>
                                    <L7p:FailOnErrorStatus booleanValue="false"/>
                                    <L7p:HttpMethod httpMethod="GET"/>
                                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.asset.hostname}/eoc/integration/v1/product/?MSISDN=${uri[4]}&amp;expand=Offers"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="serviceResponseAsset"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    </L7p:HttpRoutingAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".productCharacteristics[?(@.name=='contractState')].value"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseAsset"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="contractStatus"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${contractStatus.result}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="Active"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".productOffering.id"/>

                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseAsset"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="planId"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMwNg=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${uri[4]} | IS RESPONSE: ${serviceResponseAsset.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Movil se encuentra suspendido",
"datetimeOperation":"${request.time.local.dd/MM/yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${uri[4]} | IS RESPONSE: ${serviceResponseAsset.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - AssetEOC",
"datetimeOperation":"${request.time.local.dd/MM/yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                <L7p:VariableToSet stringValue="codeRsp"/>
                            </L7p:SetVariable>
                            <L7p:AuditDetailAssertion>
                                <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${uri[4]} | IS RESPONSE: ${serviceResponseAsset.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:CustomizeErrorResponse>
                                <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - AssetEOC",
"datetimeOperation":"${request.time.local.dd/MM/yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                <L7p:ExtraHeaders nameValuePairArray="included"/>
                            </L7p:CustomizeErrorResponse>
                            <L7p:RaiseError/>
                        </wsp:All>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_ASSET_EOC"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vR2V0UHJvZHVjdEJsYWNrTGlzdC92MSIgeG1sbnM6djExPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9NZXNzYWdlSGVhZGVyL3YxIiB4bWxuczp2Mj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vUmVzdWx0L3YyIiB4bWxuczp2MTI9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL0Vycm9yL3YxIj4NCiAgIDxzb2FwOkhlYWRlci8+DQogICA8c29hcDpCb2R5Pg0KICAgICAgPHYxOkdldFByb2R1Y3RCbGFja0xpc3RfUkVRPg0KICAgICAgICAgPHYxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgICAgPHYxMTpDb25zdW1lciBzeXNDb2RlPSIke2dhdGV3YXkub3R0LnN5c2NvZGV9IiBlbnRlcnByaXNlQ29kZT0iRU5URUwtJHtnYXRld2F5LmNvdW50cnkuY29kZX0iIGNvdW50cnlDb2RlPSIke2dhdGV3YXkuY291bnRyeS5jb2RlfSIvPg0KICAgICAgICAgICAgPHYxMTpUcmFjZSBjbGllbnRSZXFUaW1lc3RhbXA9IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1NYWFh9IiBldmVudElEPSIke2V2ZW50SWR9Ij4NCiAgICAgICAgICAgIDwvdjExOlRyYWNlPg0KICAgICAgICAgPC92MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgIDx2MTpCb2R5Pg0KICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgPHYxOlByb2R1Y3Q+DQogICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICA8djE6QmxhY2tMaXN0Pg0KICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgICAgPHYxOnBsYW5JRD4ke2luZGl2aWR1YWxOdW1iZXIucmVzdWx0fTwvdjE6cGxhbklEPg0KICAgICAgICAgICAgICAgPC92MTpCbGFja0xpc3Q+DQogICAgICAgICAgICA8L3YxOlByb2R1Y3Q+DQogICAgICAgICA8L3YxOkJvZHk+DQogICAgICA8L3YxOkdldFByb2R1Y3RCbGFja0xpc3RfUkVRPg0KICAgPC9zb2FwOkJvZHk+DQo8L3NvYXA6RW52ZWxvcGU+"/>
                                <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="message"/>
                            </L7p:SetVariable>
                            <L7p:HttpRoutingAssertion>
                                <L7p:FailOnErrorStatus booleanValue="false"/>
                                <L7p:HttpMethod httpMethod="POST"/>
                                <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/GetProductBlackList/v1"/>
                                <L7p:ProxyPassword stringValueNull="null"/>
                                <L7p:ProxyUsername stringValueNull="null"/>
                                <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                </L7p:RequestHeaderRules>
                                <L7p:RequestMsgSrc stringValue="message"/>
                                <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                </L7p:RequestParamRules>
                                <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                </L7p:ResponseHeaderRules>
                                <L7p:ResponseMsgDest stringValue="serviceResponseProductBlackList"/>
                                <L7p:SamlAssertionVersion intValue="2"/>
                            </L7p:HttpRoutingAssertion>
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                <L7p:Expression2 stringValue="200"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="productBlocked"/>
                                    <L7p:XmlMsgSrc stringValue="serviceResponseProductBlackList"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/soap:Envelope/soap:Body/ns1:GetProductBlackList_RSP/ns1:Body/ns1:Product/ns1:BlackList/ns1:isBlocked"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v12"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Error/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v11"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/MessageHeader/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns0"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/MessageHeader/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v1"/>
                                    <L7p:value stringValue="http://www.entel.cl/EBM/GetProductBlackList/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns2"/>
                                    <L7p:value stringValue="http://www.entel.cl/SC/ErrorManager/ErrorDictionary/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v2"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Result/v2"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns1"/>
                                    <L7p:value stringValue="http://www.entel.cl/EBM/GetProductBlackList/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soap"/>
                                    <L7p:value stringValue="http://www.w3.org/2003/05/soap-envelope"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns4"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Error/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns3"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Result/v2"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${productBlocked.result}"/>
                                    <L7p:Expression2 stringValue="false"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="false"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMwNQ=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseProductBlackList.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Plan o Grupo de Cliente no permitido",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                <L7p:VariableToSet stringValue="codeRsp"/>
                            </L7p:SetVariable>
                            <L7p:AuditDetailAssertion>
                                <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseProductBlackList.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:CustomizeErrorResponse>
                                <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - ProductBlackList",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                <L7p:ExtraHeaders nameValuePairArray="included"/>
                            </L7p:CustomizeErrorResponse>
                            <L7p:RaiseError/>
                        </wsp:All>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_PRODUCT_BLACK_LIST"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${planType.result}"/>
                                <L7p:Expression2 stringValue="PP"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="PP"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vR2V0Q3VzdG9tZXJBY2NvdW50QmFsYW5jZS92MSIgeG1sbnM6djExPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9NZXNzYWdlSGVhZGVyL3YxIiB4bWxuczp2Mj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vUmVzdWx0L3YyIiB4bWxuczp2MTI9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL0Vycm9yL3YxIj4NCiAgIDxzb2FwOkhlYWRlci8+DQogICA8c29hcDpCb2R5Pg0KICAgICAgPHYxOkdldEN1c3RvbWVyQWNjb3VudEJhbGFuY2VfUkVRPg0KICAgICAgICAgPHYxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgICAgPHYxMTpDb25zdW1lciBzeXNDb2RlPSIke2dhdGV3YXkub3R0LnN5c2NvZGV9IiBlbnRlcnByaXNlQ29kZT0iRU5URUwtJHtnYXRld2F5LmNvdW50cnkuY29kZX0iIGNvdW50cnlDb2RlPSIke2dhdGV3YXkuY291bnRyeS5jb2RlfSIvPg0KICAgICAgICAgICAgPHYxMTpUcmFjZSBjbGllbnRSZXFUaW1lc3RhbXA9IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1NYWFh9IiBldmVudElEPSIke2V2ZW50SWR9Ij4NCiAgICAgICAgICAgIDwvdjExOlRyYWNlPg0KICAgICAgICAgPC92MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgIDx2MTpCb2R5Pg0KICAgICAgICAgICAgPHYxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgICAgICAgIDx2MTpBc3NldD4NCiAgICAgICAgICAgICAgICAgIDx2MTpNU0lTRE4+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE6U04+JHt1cmlbNF19PC92MTpTTj4NCiAgICAgICAgICAgICAgICAgIDwvdjE6TVNJU0ROPg0KICAgICAgICAgICAgICAgPC92MTpBc3NldD4NCiAgICAgICAgICAgICAgIDx2MTpCdXNpbmVzc0ludGVyYWN0aW9uPg0KICAgICAgICAgICAgICAgICAgPHYxOmludGVyYWN0aW9uRXh0ZXJuYWxJRD4wMDA4PC92MTppbnRlcmFjdGlvbkV4dGVybmFsSUQ+DQogICAgICAgICAgICAgICA8L3YxOkJ1c2luZXNzSW50ZXJhY3Rpb24+DQogICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICA8djE6RmlsdGVyPg0KICAgICAgICAgICAgICAgICAgPHYxOm5hbWU+TU9ORURFUk9TPC92MTpuYW1lPg0KICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgPC92MTpGaWx0ZXI+DQogICAgICAgICAgICA8L3YxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgIDwvdjE6Qm9keT4NCiAgICAgIDwvdjE6R2V0Q3VzdG9tZXJBY2NvdW50QmFsYW5jZV9SRVE+DQogICA8L3NvYXA6Qm9keT4NCjwvc29hcDpFbnZlbG9wZT4="/>
                                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="message"/>
                                    </L7p:SetVariable>
                                    <L7p:HttpRoutingAssertion>
                                    <L7p:FailOnErrorStatus booleanValue="false"/>
                                    <L7p:HttpMethod httpMethod="POST"/>
                                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/GetCustomerAccountBalance/v1"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="message"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="serviceResponseAccountBalance"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    </L7p:HttpRoutingAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                    <L7p:Expression2 stringValue="200"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseAccountBalance"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy/>
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:MsgVarPrefix stringValue="xslt2"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseAccountBalance"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.)]">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2VBY2NvdW50QmFsYW5jZS5tYWlucGFydH0="/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="jsonRsp"/>
                                    </L7p:SetVariable>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".CustomerAccountBalance.[?(@.ID=='11100')].remainedAmount.amount"/>

                                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="tariff"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${tariff.result}"/>
                                    <L7p:Expression2 stringValue="0"/>
                                    <L7p:Operator operator="GT"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Operator operator="GT"/>
                                    <L7p:RightValue stringValue="0"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDAwMA=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:HardcodedResponse>
                                    <L7p:Base64ResponseBody stringValue="ewoiY29kZSI6IiR7Y29kZVJzcH0iLAoiZGVzY3JpcHRpb24iOiJDb25zdWx0YSByZWFsaXphZGEgY29ycmVjdGFtZW50ZSIsCiJkYXRldGltZU9wZXJhdGlvbiI6IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1N9IiwKImlkT3BlcmF0aW9uIjoiJHtyZXF1ZXN0SWR9Igp9"/>
                                    <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                                    </L7p:HardcodedResponse>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMxNQ=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseAccountBalance.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Saldo insuficiente para realizar la compra",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseAccountBalance.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - CustomerAccountBalance",
"datetimeOperation":"${request.time.local.dd-MM-yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_CUSTOMER_ACCOUNT_BALANCE"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${planType.result}"/>
                                <L7p:Operator operatorNull="null"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item regex="included">
                                    <L7p:Pattern stringValue="SS|CC"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vR2V0QXBwbGllZEN1c3RvbWVyQmlsbGluZ0NoYXJnZS92MSIgeG1sbnM6djExPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9NZXNzYWdlSGVhZGVyL3YxIiB4bWxuczp2Mj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vUmVzdWx0L3YyIiB4bWxuczp2MTI9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL0Vycm9yL3YxIj4NCiAgIDxzb2FwOkhlYWRlci8+DQogICA8c29hcDpCb2R5Pg0KICAgICAgPHYxOkdldEFwcGxpZWRDdXN0b21lckJpbGxpbmdDaGFyZ2VfUkVRPg0KICAgICAgICAgPHYxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgICAgPHYxMTpDb25zdW1lciBzeXNDb2RlPSIke2dhdGV3YXkub3R0LnN5c2NvZGV9IiBlbnRlcnByaXNlQ29kZT0iRU5URUwtJHtnYXRld2F5LmNvdW50cnkuY29kZX0iIGNvdW50cnlDb2RlPSIke2dhdGV3YXkuY291bnRyeS5jb2RlfSIvPg0KICAgICAgICAgICAgPHYxMTpUcmFjZSBjbGllbnRSZXFUaW1lc3RhbXA9IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1NYWFh9IiBldmVudElEPSIke2V2ZW50SWR9Ij4NCiAgICAgICAgICAgIDwvdjExOlRyYWNlPg0KICAgICAgICAgPC92MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgIDx2MTpCb2R5Pg0KICAgICAgICAgICAgPHYxOkJpbGxEb2N1bWVudD4NCiAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgICAgIDx2MTpvcGVyYXRpb24+MTwvdjE6b3BlcmF0aW9uPg0KICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgPHYxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgICAgICAgIDx2MTpJbmRpdmlkdWFsSWRlbnRpZmljYXRpb24+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE6bnVtYmVyPiR7aW5kaXZpZHVhbE51bWJlci5yZXN1bHR9PC92MTpudW1iZXI+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE6dHlwZT5SVVQ8L3YxOnR5cGU+DQogICAgICAgICAgICAgICAgICA8L3YxOkluZGl2aWR1YWxJZGVudGlmaWNhdGlvbj4NCiAgICAgICAgICAgICAgIDwvdjE6Q3VzdG9tZXJBY2NvdW50Pg0KICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgPHYxOklzc3VpbmdDb21wYW55Pg0KICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgICAgPHYxOk9yZ2FuaXphdGlvbk5hbWU+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE6c2hvcnROYW1lPlBDUzwvdjE6c2hvcnROYW1lPg0KICAgICAgICAgICAgICAgICAgPC92MTpPcmdhbml6YXRpb25OYW1lPg0KICAgICAgICAgICAgICAgPC92MTpJc3N1aW5nQ29tcGFueT4NCiAgICAgICAgICAgIDwvdjE6QmlsbERvY3VtZW50Pg0KICAgICAgICAgPC92MTpCb2R5Pg0KICAgICAgPC92MTpHZXRBcHBsaWVkQ3VzdG9tZXJCaWxsaW5nQ2hhcmdlX1JFUT4NCiAgIDwvc29hcDpCb2R5Pg0KPC9zb2FwOkVudmVsb3BlPg=="/>
                                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="message"/>
                                    </L7p:SetVariable>
                                    <L7p:HttpRoutingAssertion>
                                    <L7p:FailOnErrorStatus booleanValue="false"/>
                                    <L7p:HttpMethod httpMethod="POST"/>
                                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/GetAppliedCustomerBillingCharge/v1"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="message"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="serviceResponseBillingCharge"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    </L7p:HttpRoutingAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                    <L7p:Expression2 stringValue="200"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseBillingCharge"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy/>
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:MsgVarPrefix stringValue="xslt2"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseBillingCharge"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.)]">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2VCaWxsaW5nQ2hhcmdlLm1haW5wYXJ0fQ=="/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="inMessage"/>
                                    </L7p:SetVariable>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".SourceError.code"/>
                                    <L7p:OtherTargetMessageVariable stringValue="inMessage"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="codeSAP"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${codeSAP.result}"/>
                                    <L7p:Expression2 stringValue="0010"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="0010"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUueXl5eS1NTS1kZH0="/>
                                    <L7p:DataType variableDataType="dateTime"/>
                                    <L7p:DateFormat stringValue="yyyy-MM-dd"/>

                                    <L7p:DateOffsetExpression stringValue=""/>
                                    <L7p:DateOffsetField intValue="5"/>
                                    <L7p:VariableToSet stringValue="actualDate"/>
                                    </L7p:SetVariable>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".CustomerBill"/>

                                    <L7p:OtherTargetMessageVariable stringValue="inMessage"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="customerBills"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue=""/>
                                    <L7p:VariableToSet stringValue="deuda"/>
                                    </L7p:SetVariable>
                                    <L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="customerBills.results" variablePrefix="aux">
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="messageInJson"/>
                                    </L7p:SetVariable>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".paymentDueDate"/>

                                    <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="paymentDueDate"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue=".balanceDue"/>

                                    <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="balanceDue"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Expression1 stringValue="${paymentDueDate.result}"/>

                                    <L7p:Operator operatorNull="null"/>

                                    <L7p:Predicates predicates="included">

                                    <L7p:item dataType="included">

                                    <L7p:Type variableDataType="dateTime"/>
                                    </L7p:item>

                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Operator operator="LE"/>

                                    <L7p:RightValue stringValue="${actualDate}"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="Uw=="/>

                                    <L7p:VariableToSet stringValue="deuda"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Expression1 stringValue="${deuda}"/>

                                    <L7p:Expression2 stringValue="S"/>
                                    <L7p:Negate booleanValue="true"/>

                                    <L7p:Predicates predicates="included">

                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Negated booleanValue="true"/>

                                    <L7p:RightValue stringValue="S"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Expression1 stringValue="${paymentDueDate.result}"/>

                                    <L7p:Operator operatorNull="null"/>

                                    <L7p:Predicates predicates="included">

                                    <L7p:item dataType="included">

                                    <L7p:Type variableDataType="dateTime"/>
                                    </L7p:item>

                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Operator operator="GT"/>

                                    <L7p:RightValue stringValue="${actualDate}"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="Tg=="/>

                                    <L7p:VariableToSet stringValue="deuda"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:TrueAssertion/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                    </L7p:ForEachLoop>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${deuda}"/>
                                    <L7p:Expression2 stringValue="S"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:RightValue stringValue="S"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="MDMwNg=="/>

                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>

                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseBillingCharge.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>

                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>

                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Movil se encuentra suspendido",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>

                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:TrueAssertion/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseBillingCharge.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - AppliedCustomerBillingCharge",
"datetimeOperation":"${request.time.local.dd-MM-yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_APPLIED_CUSTOMER_BILLING_CHARGE"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vR2V0Q3JlZGl0QXZhaWxhYmxlL3YxIiB4bWxuczp2MTE9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL01lc3NhZ2VIZWFkZXIvdjEiIHhtbG5zOnYyPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9SZXN1bHQvdjIiIHhtbG5zOnYxMj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vRXJyb3IvdjEiPg0KICAgPHNvYXA6SGVhZGVyLz4NCiAgIDxzb2FwOkJvZHk+DQogICAgICA8djE6R2V0Q3JlZGl0QXZhaWxhYmxlX1JFUT4NCiAgICAgICAgIDx2MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgICAgIDx2MTE6Q29uc3VtZXIgc3lzQ29kZT0iJHtnYXRld2F5Lm90dC5zeXNjb2RlfSIgZW50ZXJwcmlzZUNvZGU9IkVOVEVMLSR7Z2F0ZXdheS5jb3VudHJ5LmNvZGV9IiBjb3VudHJ5Q29kZT0iJHtnYXRld2F5LmNvdW50cnkuY29kZX0iLz4NCiAgICAgICAgICAgIDx2MTE6VHJhY2UgY2xpZW50UmVxVGltZXN0YW1wPSIke3JlcXVlc3QudGltZS5sb2NhbC55eXl5LU1NLWRkJ1QnSEg6bW06c3MuU1NTWFhYfSIgZXZlbnRJRD0iJHtldmVudElkfSI+DQogICAgICAgICAgICA8L3YxMTpUcmFjZT4NCiAgICAgICAgIDwvdjExOlJlcXVlc3RIZWFkZXI+DQogICAgICAgICA8djE6Qm9keT4NCiAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgIDx2MTpDcmVkaXRBdmFpbGFibGUvPg0KICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgPHYxOkdldENyZWRpdEF2YWlsYWJsZT4NCiAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgICAgIDx2MTptc2lzZG4+JHt1cmlbNF19PC92MTptc2lzZG4+DQogICAgICAgICAgICA8L3YxOkdldENyZWRpdEF2YWlsYWJsZT4NCiAgICAgICAgIDwvdjE6Qm9keT4NCiAgICAgIDwvdjE6R2V0Q3JlZGl0QXZhaWxhYmxlX1JFUT4NCiAgIDwvc29hcDpCb2R5Pg0KPC9zb2FwOkVudmVsb3BlPg=="/>
                                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="message"/>
                                    </L7p:SetVariable>
                                    <L7p:HttpRoutingAssertion>
                                    <L7p:FailOnErrorStatus booleanValue="false"/>
                                    <L7p:HttpMethod httpMethod="POST"/>
                                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/GetCreditAvailable/v1"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="message"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="serviceResponseCreditAvailable"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    </L7p:HttpRoutingAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                    <L7p:Expression2 stringValue="200"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="creditAvailable"/>
                                    <L7p:XmlMsgSrc stringValue="serviceResponseCreditAvailable"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/soap:Envelope/soap:Body/ns30:GetCreditAvailable_RSP/ns30:Body/ns30:GetCreditAvailable/ns30:CreditAvailable"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="ns30"/>
                                    <L7p:value stringValue="http://www.entel.cl/EBM/GetCreditAvailable/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v12"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Error/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v11"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/MessageHeader/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns0"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/MessageHeader/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v1"/>
                                    <L7p:value stringValue="http://www.entel.cl/EBM/GetCreditAvailable/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v2"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Result/v2"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns2"/>
                                    <L7p:value stringValue="http://www.entel.cl/SC/ErrorManager/ErrorDictionary/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soap"/>
                                    <L7p:value stringValue="http://www.w3.org/2003/05/soap-envelope"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns4"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Error/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns3"/>
                                    <L7p:value stringValue="http://www.entel.cl/ESO/Result/v2"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${creditAvailable.result}"/>
                                    <L7p:Expression2 stringValue="0"/>
                                    <L7p:Operator operator="GT"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Operator operator="GT"/>
                                    <L7p:RightValue stringValue="0"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDAwMA=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:HardcodedResponse>
                                    <L7p:Base64ResponseBody stringValue="ewoiY29kZSI6IiR7Y29kZVJzcH0iLAoiZGVzY3JpcHRpb24iOiJDb25zdWx0YSByZWFsaXphZGEgY29ycmVjdGFtZW50ZSIsCiJkYXRldGltZU9wZXJhdGlvbiI6IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1N9IiwKImlkT3BlcmF0aW9uIjoiJHtyZXF1ZXN0SWR9Igp9"/>
                                    <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                                    </L7p:HardcodedResponse>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${planType.result}"/>
                                    <L7p:Expression2 stringValue="CC"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="CC"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vR2V0Q3VzdG9tZXJBY2NvdW50QmFsYW5jZS92MSIgeG1sbnM6djExPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9NZXNzYWdlSGVhZGVyL3YxIiB4bWxuczp2Mj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vUmVzdWx0L3YyIiB4bWxuczp2MTI9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL0Vycm9yL3YxIj4NCiAgIDxzb2FwOkhlYWRlci8+DQogICA8c29hcDpCb2R5Pg0KICAgICAgPHYxOkdldEN1c3RvbWVyQWNjb3VudEJhbGFuY2VfUkVRPg0KICAgICAgICAgPHYxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgICAgPHYxMTpDb25zdW1lciBzeXNDb2RlPSIke2dhdGV3YXkub3R0LnN5c2NvZGV9IiBlbnRlcnByaXNlQ29kZT0iRU5URUwtJHtnYXRld2F5LmNvdW50cnkuY29kZX0iIGNvdW50cnlDb2RlPSIke2dhdGV3YXkuY291bnRyeS5jb2RlfSIvPg0KICAgICAgICAgICAgPHYxMTpUcmFjZSBjbGllbnRSZXFUaW1lc3RhbXA9IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1NYWFh9IiBldmVudElEPSIke2V2ZW50SWR9Ij4NCiAgICAgICAgICAgIDwvdjExOlRyYWNlPg0KICAgICAgICAgPC92MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgIDx2MTpCb2R5Pg0KICAgICAgICAgICAgPHYxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgICAgICAgIDx2MTpBc3NldD4NCiAgICAgICAgICAgICAgICAgIDx2MTpNU0lTRE4+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE6U04+JHt1cmlbNF19PC92MTpTTj4NCiAgICAgICAgICAgICAgICAgIDwvdjE6TVNJU0ROPg0KICAgICAgICAgICAgICAgPC92MTpBc3NldD4NCiAgICAgICAgICAgICAgIDx2MTpCdXNpbmVzc0ludGVyYWN0aW9uPg0KICAgICAgICAgICAgICAgICAgPHYxOmludGVyYWN0aW9uRXh0ZXJuYWxJRD4wMDA4PC92MTppbnRlcmFjdGlvbkV4dGVybmFsSUQ+DQogICAgICAgICAgICAgICA8L3YxOkJ1c2luZXNzSW50ZXJhY3Rpb24+DQogICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICA8djE6RmlsdGVyPg0KICAgICAgICAgICAgICAgICAgPHYxOm5hbWU+TU9ORURFUk9TPC92MTpuYW1lPg0KICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgPC92MTpGaWx0ZXI+DQogICAgICAgICAgICA8L3YxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgIDwvdjE6Qm9keT4NCiAgICAgIDwvdjE6R2V0Q3VzdG9tZXJBY2NvdW50QmFsYW5jZV9SRVE+DQogICA8L3NvYXA6Qm9keT4NCjwvc29hcDpFbnZlbG9wZT4="/>
                                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>

                                    <L7p:VariableToSet stringValue="message"/>
                                    </L7p:SetVariable>
                                    <L7p:HttpRoutingAssertion>

                                    <L7p:FailOnErrorStatus booleanValue="false"/>
                                    <L7p:HttpMethod httpMethod="POST"/>

                                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/GetCustomerAccountBalance/v1"/>

                                    <L7p:ProxyPassword stringValueNull="null"/>

                                    <L7p:ProxyUsername stringValueNull="null"/>

                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">

                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">

                                    <L7p:item httpPassthroughRule="included">

                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>

                                    <L7p:item httpPassthroughRule="included">

                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>

                                    <L7p:RequestMsgSrc stringValue="message"/>

                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">

                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>

                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">

                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included">

                                    <L7p:item httpPassthroughRule="included">

                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>

                                    <L7p:ResponseMsgDest stringValue="serviceResponseAccountBalance"/>

                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    </L7p:HttpRoutingAssertion>
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                                    <L7p:Expression2 stringValue="200"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:RightValue stringValue="200"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>

                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseAccountBalance"/>

                                    <L7p:ResourceInfo staticResourceInfo="included">

                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy/>
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>

                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>

                                    <L7p:MsgVarPrefix stringValue="xslt2"/>

                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponseAccountBalance"/>

                                    <L7p:ResourceInfo staticResourceInfo="included">

                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.)]">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>

                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2VBY2NvdW50QmFsYW5jZS5tYWlucGFydH0="/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>

                                    <L7p:VariableToSet stringValue="jsonRsp"/>
                                    </L7p:SetVariable>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:EvaluateJsonPathExpression>

                                    <L7p:Expression stringValue=".CustomerAccountBalance.[?(@.ID=='11100')].remainedAmount.amount"/>

                                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>

                                    <L7p:Target target="OTHER"/>

                                    <L7p:VariablePrefix stringValue="tariff"/>
                                    </L7p:EvaluateJsonPathExpression>
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Expression1 stringValue="${tariff.result}"/>

                                    <L7p:Expression2 stringValue="0"/>

                                    <L7p:Operator operator="GT"/>

                                    <L7p:Predicates predicates="included">

                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Operator operator="GT"/>

                                    <L7p:RightValue stringValue="0"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="MDAwMA=="/>

                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>

                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>

                                    <L7p:key stringValue="portal.analytics.response.code"/>

                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>

                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>

                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:HardcodedResponse>

                                    <L7p:Base64ResponseBody stringValue="ewoiY29kZSI6IiR7Y29kZVJzcH0iLAoiZGVzY3JpcHRpb24iOiJDb25zdWx0YSByZWFsaXphZGEgY29ycmVjdGFtZW50ZSIsCiJkYXRldGltZU9wZXJhdGlvbiI6IiR7cmVxdWVzdC50aW1lLmxvY2FsLnl5eXktTU0tZGQnVCdISDptbTpzcy5TU1N9IiwKImlkT3BlcmF0aW9uIjoiJHtyZXF1ZXN0SWR9Igp9"/>

                                    <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                                    </L7p:HardcodedResponse>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="MDMxNQ=="/>

                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>

                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>

                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseAccountBalance.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>

                                    <L7p:Level stringValue="WARNING"/>

                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>

                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>

                                    <L7p:key stringValue="portal.analytics.response.code"/>

                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>

                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>

                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>

                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Saldo insuficiente para realizar la compra",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>

                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>

                                    <L7p:ExtraHeaders nameValuePairArray="included"/>

                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="MDIwMQ=="/>

                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>

                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseAccountBalance.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>

                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>

                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - CustomerAccountBalance",
"datetimeOperation":"${request.time.local.dd-MM-yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>

                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_CUSTOMER_ACCOUNT_BALANCE"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:OneOrMore>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDMxNA=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseCreditAvailable.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Saldo de Limite de credito insuficiente para realizar la compra",
"datetimeOperation":"${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="200"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MDIwMQ=="/>
                                    <L7p:VariableToSet stringValue="codeRsp"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseCreditAvailable.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS - CreditAvailable",
"datetimeOperation":"${request.time.local.dd-MM-yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    </L7p:CustomizeErrorResponse>
                                    <L7p:RaiseError/>
                                </wsp:All>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="GET_CREDIT_AVAILABLE"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                        </wsp:All>
                    </wsp:OneOrMore>
                </wsp:All>
            </wsp:All>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="PHNvYXBlbnY6RW52ZWxvcGUgeG1sbnM6c29hcGVudj0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iIHhtbG5zOnJlcT0iaHR0cDovL3d3dy5lc2EuY29tL0JpbGxpbmcvQWNjb3VudFJlY2VpdmFibGVzL04vdmFsaWRhck1vdmlsU3RvcmVXUy9yZXF1ZXN0Ij4NCiAgIDxzb2FwZW52OkhlYWRlci8+DQogICA8c29hcGVudjpCb2R5Pg0KICAgICAgPHJlcTpjb25zdWx0YXJSZXF1ZXN0RG9jdW1lbnQ+DQogICAgICAgICA8cmVxOnJlcXVlc3Q+DQogICAgICAgICAgICA8cmVxOm1vdmlsPiR7dXJpWzRdfTwvcmVxOm1vdmlsPg0KICAgICAgICAgPC9yZXE6cmVxdWVzdD4NCiAgICAgIDwvcmVxOmNvbnN1bHRhclJlcXVlc3REb2N1bWVudD4NCiAgIDwvc29hcGVudjpCb2R5Pg0KPC9zb2FwZW52OkVudmVsb3BlPg=="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="message"/>
                    </L7p:SetVariable>
                    <L7p:HttpRoutingAssertion>
                        <L7p:ConnectionTimeout stringValue="5000"/>
                        <L7p:FailOnErrorStatus booleanValue="false"/>
                        <L7p:HttpMethod httpMethod="POST"/>
                        <L7p:ProtectedServiceUrl stringValue="http://${gateway.legado.hostname}/Billing/AccountReceivables/N/validarMovilStoreService/validarMovilStore"/>
                        <L7p:ProxyPassword stringValueNull="null"/>
                        <L7p:ProxyUsername stringValueNull="null"/>
                        <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                            <L7p:ForwardAll booleanValue="true"/>
                            <L7p:Rules httpPassthroughRules="included">
                                <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                </L7p:item>
                                <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                </L7p:item>
                            </L7p:Rules>
                        </L7p:RequestHeaderRules>
                        <L7p:RequestMsgSrc stringValue="message"/>
                        <L7p:RequestParamRules httpPassthroughRuleSet="included">
                            <L7p:ForwardAll booleanValue="true"/>
                            <L7p:Rules httpPassthroughRules="included"/>
                        </L7p:RequestParamRules>
                        <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                            <L7p:ForwardAll booleanValue="true"/>
                            <L7p:Rules httpPassthroughRules="included">
                                <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                </L7p:item>
                            </L7p:Rules>
                        </L7p:ResponseHeaderRules>
                        <L7p:ResponseMsgDest stringValue="serviceResponseLegado"/>
                    </L7p:HttpRoutingAssertion>
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="200"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:ResponseXpathAssertion>
                        <L7p:VariablePrefix stringValue="codeRsp"/>
                        <L7p:XmlMsgSrc stringValue="serviceResponseLegado"/>
                        <L7p:XpathExpression xpathExpressionValue="included">
                            <L7p:Expression stringValue="/soapenv:Envelope/soapenv:Body/res:consultarResponseDocument/res:response/res:headerOut/res:codigo"/>
                            <L7p:Namespaces mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="res"/>
                                    <L7p:value stringValue="http://www.esa.com/Billing/AccountReceivables/N/validarMovilStoreWS/response"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                            </L7p:Namespaces>
                            <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                        </L7p:XpathExpression>
                    </L7p:ResponseXpathAssertion>
                    <L7p:ResponseXpathAssertion>
                        <L7p:VariablePrefix stringValue="descriptRsp"/>
                        <L7p:XmlMsgSrc stringValue="serviceResponseLegado"/>
                        <L7p:XpathExpression xpathExpressionValue="included">
                            <L7p:Expression stringValue="/soapenv:Envelope/soapenv:Body/res:consultarResponseDocument/res:response/res:headerOut/res:descripcion"/>
                            <L7p:Namespaces mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="res"/>
                                    <L7p:value stringValue="http://www.esa.com/Billing/AccountReceivables/N/validarMovilStoreWS/response"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                            </L7p:Namespaces>
                            <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                        </L7p:XpathExpression>
                    </L7p:ResponseXpathAssertion>
                    <L7p:ResponseXpathAssertion>
                        <L7p:VariablePrefix stringValue="idTransaction"/>
                        <L7p:XmlMsgSrc stringValue="serviceResponseLegado"/>
                        <L7p:XpathExpression xpathExpressionValue="included">
                            <L7p:Expression stringValue="/soapenv:Envelope/soapenv:Body/res:consultarResponseDocument/res:response/res:headerOut/res:idOperacion"/>
                            <L7p:Namespaces mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="res"/>
                                    <L7p:value stringValue="http://www.esa.com/Billing/AccountReceivables/N/validarMovilStoreWS/response"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                            </L7p:Namespaces>
                            <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                        </L7p:XpathExpression>
                    </L7p:ResponseXpathAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                        <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route OK | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseLegado.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                        <L7p:Level stringValue="WARNING"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Encapsulated>
                        <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                        <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                        <L7p:Parameters mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.response.code"/>
                                <L7p:value stringValue="200"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                <L7p:value stringValue="${request.routingTotalTime}"/>
                            </L7p:entry>
                        </L7p:Parameters>
                    </L7p:Encapsulated>
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="ewoiY29kZSI6IiR7Y29kZVJzcC5yZXN1bHR9IiwKImRlc2NyaXB0aW9uIjoiJHtkZXNjcmlwdFJzcC5yZXN1bHR9IiwKImRhdGV0aW1lT3BlcmF0aW9uIjoiJHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30iLAoiaWRPcGVyYXRpb24iOiIke3JlcXVlc3RJZH0iCn0="/>
                        <L7p:EarlyResponse booleanValue="true"/>
                        <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                    </L7p:HardcodedResponse>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="MDIwMQ=="/>
                        <L7p:VariableToSet stringValue="codeRsp"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                        <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${idTransaction.result} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponseLegado.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                        <L7p:Level stringValue="WARNING"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Encapsulated>
                        <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                        <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                        <L7p:Parameters mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.response.code"/>
                                <L7p:value stringValue="500"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                <L7p:value stringValue="${request.routingTotalTime}"/>
                            </L7p:entry>
                        </L7p:Parameters>
                    </L7p:Encapsulated>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
"code":"${codeRsp}",
"description":"Error en la ejecución del WS de Legado",
"datetimeOperation":"${request.time.local.dd-MM-yyyy'T'HH:mm:ss.SSS}",
"idOperation":"${requestId}"
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="LEGADO"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="GET_CUSTOMER_INFO"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>