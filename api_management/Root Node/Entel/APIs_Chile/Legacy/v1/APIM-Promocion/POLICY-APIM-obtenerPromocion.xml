<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:HtmlFormDataAssertion>
                    <L7p:AllowGet booleanValue="true"/>
                    <L7p:DisallowOtherFields booleanValue="true"/>
                    <L7p:FieldSpecs htmlFormFieldSpecArray="included">
                        <L7p:item htmlFormFieldSpec="included">
                            <L7p:AllowEmpty boxedBooleanValue="false"/>
                            <L7p:AllowedLocation fieldLocation="requestUrl"/>
                            <L7p:DataType fieldDataType="string"/>
                            <L7p:MaxOccurs intValue="1"/>
                            <L7p:MinOccurs intValue="1"/>
                            <L7p:Name stringValue="msisdn"/>
                        </L7p:item>
                    </L7p:FieldSpecs>
                </L7p:HtmlFormDataAssertion>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="QTQ="/>
                    <L7p:VariableToSet stringValue="code"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="SW52YWxpZCBwYXJhbWV0ZXI="/>
                    <L7p:VariableToSet stringValue="description"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="UXVlcnkgcGFyYW1ldGVyIGludmFsaWQ="/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                </L7p:SetVariable>
                <L7p:AuditDetailAssertion>
                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                    <L7p:Detail stringValue="TRANSACTION: ${requestId} CODE: ${code} DESCRIPTION: ${description} DETAIL: ${descriptionDetail}"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                    <L7p:HttpStatus stringValue="400"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="validar parametros query"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="PHNvYXBlbnY6RW52ZWxvcGUgeG1sbnM6c29hcGVudj0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iIHhtbG5zOnJlcT0iaHR0cDovL3d3dy5lc2EuY29tL01hcmtldFNhbGVzL1NhbGVzTWFzc2l2ZS9UL09idGVuZXJQcm9tb2Npb25lc1Bvck1vdmlsL1JlcXVlc3QiPg0KICAgPHNvYXBlbnY6SGVhZGVyLz4NCiAgIDxzb2FwZW52OkJvZHk+DQogICAgICA8cmVxOm9idGVuZXJQcm9tb2Npb25lc1Bvck1vdmlsUmVxdWVzdD4NCiAgICAgICAgIDxyZXE6bW92aWw+JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm1zaXNkbn08L3JlcTptb3ZpbD4NCiAgICAgICAgIDxyZXE6bWVyY2Fkbz48L3JlcTptZXJjYWRvPg0KICAgICAgPC9yZXE6b2J0ZW5lclByb21vY2lvbmVzUG9yTW92aWxSZXF1ZXN0Pg0KICAgPC9zb2FwZW52OkJvZHk+DQo8L3NvYXBlbnY6RW52ZWxvcGU+"/>
                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="request"/>
                </L7p:SetVariable>
                <L7p:HttpRoutingAssertion>
                    <L7p:FailOnErrorStatus booleanValue="false"/>
                    <L7p:HttpMethod httpMethod="POST"/>
                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.esb.hostname}/marketsales/salesmassive/gestionoferta/mar_t_px_obtenerpromocionespormovilps?wsdl"/>
                    <L7p:ProxyPassword stringValueNull="null"/>
                    <L7p:ProxyUsername stringValueNull="null"/>
                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Cookie"/>
                            </L7p:item>
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="SOAPAction"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:RequestHeaderRules>
                    <L7p:RequestMsgSrc stringValue="request"/>
                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included"/>
                    </L7p:RequestParamRules>
                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Set-Cookie"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:ResponseHeaderRules>
                    <L7p:ResponseMsgDest stringValue="serviceResponse"/>
                    <L7p:SamlAssertionVersion intValue="2"/>
                </L7p:HttpRoutingAssertion>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:Enabled booleanValue="false"/>
                    <L7p:VariableToSet stringValue="serviceResponse"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="200"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="codeResult"/>
                            <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/S:Envelope/S:Body/ns4:obtenerPromocionesPorMovilResponse/ns4:codRespuesta"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="S"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns2"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/SalesMassive/T/ObtenerPromocionesPorMovil/Fault"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns4"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/SalesMassive/T/ObtenerPromocionesPorMovil/Response"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns3"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/SalesMassive/T/ObtenerPromocionesPorMovil/Request"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="descriptionResult"/>
                            <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/soapenv:Envelope/soapenv:Body/ns4:obtenerPromocionesPorMovilResponse/ns4:descrRespuesta"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="typ"/>
                                    <L7p:value stringValue="http://www.epcs.com/erp/seguridad/types"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="seg"/>
                                    <L7p:value stringValue="http://www.epcs.com/erp/seguridad"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns4"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/SalesMassive/T/ObtenerPromocionesPorMovil/Response"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${codeResult.result}"/>
                                    <L7p:Expression2 stringValue="0"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="0"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy />
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                </L7p:XslTransformation>
                                <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:MsgVarPrefix stringValue="xslt2"/>
                                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.) or name(.) = 'promo']">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="1.0"/>
                                </L7p:XslTransformation>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2UubWFpbnBhcnR9"/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="responseJson"/>
                                </L7p:SetVariable>
                                <L7p:EvaluateJsonPathExpression>
                                    <L7p:Expression stringValue="$.Envelope.Body.obtenerPromocionesPorMovilResponse.promos"/>
                                    <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                                    <L7p:Target target="OTHER"/>
                                </L7p:EvaluateJsonPathExpression>
                                <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="jsonPath.result"/>
                                    <L7p:Regex stringValue="^(.)|}$"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue=""/>
                                    <L7p:Target target="OTHER"/>
                                </L7p:Regex>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="code"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvblJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:VariableToSet stringValue="description"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvblJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                                </L7p:SetVariable>
                                <L7p:HardcodedResponse>
                                    <L7p:Base64ResponseBody stringValue="ewoicmVzdWx0Ijp7CgkidHJhbnNhY3Rpb25JZCI6IiR7cmVxdWVzdElkfSIsCgkiY29kZSI6IiR7Y29kZX0iLAoJImRlc2NyaXB0aW9uIjoiJHtkZXNjcmlwdGlvbn0iLAoJInJlc3BvbnNlVGltZXN0YW1wIjoiJHtyZXNwb25zZVRpbWVzdGFtcH0iCgl9LAoke2pzb25QYXRoLnJlc3VsdH0KfQ=="/>
                                    <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                                </L7p:HardcodedResponse>
                            </wsp:All>
                            <wsp:All wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${codeResult.result}"/>
                                    <L7p:Expression2 stringValue="-1"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="-1"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="code"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvblJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:VariableToSet stringValue="description"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                                </L7p:SetVariable>
                                <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                                    <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="422"/>
                                </L7p:CustomizeErrorResponse>
                                <L7p:RaiseError/>
                            </wsp:All>
                            <wsp:All L7p:Enabled="false" wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${codeResult.result}"/>
                                    <L7p:Expression2 stringValue="500"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="500"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="code"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvblJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:VariableToSet stringValue="description"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbkRldGFpbFJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                                </L7p:SetVariable>
                                <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                                    <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                </L7p:CustomizeErrorResponse>
                                <L7p:RaiseError/>
                            </wsp:All>
                            <wsp:All wsp:Usage="Required">
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="code"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvblJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:VariableToSet stringValue="description"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbkRldGFpbFJlc3VsdC5yZXN1bHR9"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                                </L7p:SetVariable>
                                <L7p:AuditDetailAssertion>
                                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                                    <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                </L7p:CustomizeErrorResponse>
                                <L7p:RaiseError/>
                            </wsp:All>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="http status 200"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="500"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="UzEtNTAw"/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="QmFja2VuZCBlcnJvcg=="/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgY29udHJvbGFkbyBkZSBiYWNrZW5k"/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                            <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="http status 500"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="UzEtNg=="/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="QmFja2VuZCBlcnJvcg=="/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgZGVzY29ub2NpZG8gZGUgYmFja2VuZA=="/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                            <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="http status generico"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="logica"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="-1"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="UzEtMQ=="/>
                        <L7p:VariableToSet stringValue="code"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SW50ZXJuYWwgZXJyb3I="/>
                        <L7p:VariableToSet stringValue="description"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SG9zdCBub3QgZm91bmQ="/>
                        <L7p:VariableToSet stringValue="descriptionDetail"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                        <L7p:VariableToSet stringValue="responseTimestamp"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                        <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="http status -1"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="-2"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="UzEtMg=="/>
                        <L7p:VariableToSet stringValue="code"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SW50ZXJuYWwgZXJyb3I="/>
                        <L7p:VariableToSet stringValue="description"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="QmFkIFVSTA=="/>
                        <L7p:VariableToSet stringValue="descriptionDetail"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                        <L7p:VariableToSet stringValue="responseTimestamp"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                        <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="http status -2"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="-3"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="UzEtMw=="/>
                        <L7p:VariableToSet stringValue="code"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SW50ZXJuYWwgZXJyb3I="/>
                        <L7p:VariableToSet stringValue="description"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="Q29ubmVjdGlvbiB0aW1lb3V0"/>
                        <L7p:VariableToSet stringValue="descriptionDetail"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                        <L7p:VariableToSet stringValue="responseTimestamp"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                        <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="http status -3"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="-4"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="UzEtNA=="/>
                        <L7p:VariableToSet stringValue="code"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SW50ZXJuYWwgZXJyb3I="/>
                        <L7p:VariableToSet stringValue="description"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="UmVhZCB0aW1lb3V0"/>
                        <L7p:VariableToSet stringValue="descriptionDetail"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                        <L7p:VariableToSet stringValue="responseTimestamp"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                        <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="http status -4"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="-5"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="UzEtNQ=="/>
                        <L7p:VariableToSet stringValue="code"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SW50ZXJuYWwgZXJyb3I="/>
                        <L7p:VariableToSet stringValue="description"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="VW5kZWZpbmVkIGVycm9y"/>
                        <L7p:VariableToSet stringValue="descriptionDetail"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                        <L7p:VariableToSet stringValue="responseTimestamp"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                        <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart}"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="http status -5"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="control de error llamada http"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="logica"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>