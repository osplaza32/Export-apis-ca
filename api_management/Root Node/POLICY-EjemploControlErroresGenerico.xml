<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:Split>
                    <L7p:IgnoreEmptyValues booleanValue="true"/>
                    <L7p:InputVariable stringValue="request.http.uri"/>
                    <L7p:OutputVariable stringValue="uri"/>
                    <L7p:SplitPattern stringValue="/"/>
                </L7p:Split>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLnJlcXVlc3RUaW1lc3RhbXB9"/>
                    <L7p:VariableToSet stringValue="Timestamp"/>
                </L7p:SetVariable>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="Timestamp"/>
                    <L7p:Regex stringValue="\-|T|\:|\."/>
                    <L7p:RegexVar stringValue="Timestamp"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:CaptureVar stringValue="Timestamp"/>
                    <L7p:OtherTargetMessageVariable stringValue="Timestamp"/>
                    <L7p:Regex stringValue="^................"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0SWR9"/>
                    <L7p:VariableToSet stringValue="originEventID"/>
                </L7p:SetVariable>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:IncludeEntireExpressionCapture booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="originEventID"/>
                    <L7p:Regex stringValue="\-"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="originEventID"/>
                    <L7p:Regex stringValue="^...."/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="MDAwMA=="/>
                    <L7p:VariableToSet stringValue="originSystem"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="U0FTUzEwMDEwNQ=="/>
                    <L7p:VariableToSet stringValue="operationCode"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtvcmlnaW5TeXN0ZW19JHtvcGVyYXRpb25Db2RlfSR7VGltZXN0YW1wfSR7b3JpZ2luRXZlbnRJRH0wMDA="/>
                    <L7p:VariableToSet stringValue="eventId"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vQ3VzdG9tZXJQYXJ0eUxvZ2ljYWxSZXNvdXJjZVNwZWMvR2V0L3YxIiB4bWxuczp2MTE9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL01lc3NhZ2VIZWFkZXIvdjEiIHhtbG5zOnYyPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9SZXN1bHQvdjIiIHhtbG5zOnYxMj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vRXJyb3IvdjEiIHhtbG5zOnYxMz0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk8vTVNJU0ROL3YxIj4NCiAgIDxzb2FwOkhlYWRlci8+DQogICA8c29hcDpCb2R5Pg0KICAgICAgPHYxOkdldF9DdXN0b21lclBhcnR5TG9naWNhbFJlc291cmNlU3BlY19SRVE+DQogICAgICAgICA8djExOlJlcXVlc3RIZWFkZXI+DQogICAgICAgICAgICA8djExOkNvbnN1bWVyIHN5c0NvZGU9IiR7cmVxdWVzdC5odHRwLmhlYWRlci5hcHBsaWNhdGlvbkNvZGV9IiBlbnRlcnByaXNlQ29kZT0iRU5URUwtJHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLmNvdW50cnlDb2RlfSIgY291bnRyeUNvZGU9IiR7cmVxdWVzdC5odHRwLmhlYWRlci5jb3VudHJ5Q29kZX0iLz4NCiAgICAgICAgICAgIDx2MTE6VHJhY2UgY2xpZW50UmVxVGltZXN0YW1wPSIke3JlcXVlc3QuaHR0cC5oZWFkZXIucmVxdWVzdFRpbWVzdGFtcH0iIGV2ZW50SUQ9IiR7ZXZlbnRJZH0iPg0KICAgICAgICAgICAgPC92MTE6VHJhY2U+DQogICAgICAgICA8L3YxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgPHYxOkJvZHk+DQogICAgICAgICAgICA8djE6Q3VzdG9tZXJBY2NvdW50Pg0KICAgICAgICAgICAgICAgPHYxOkFzc2V0Pg0KICAgICAgICAgICAgICAgICAgPHYxOk1TSVNETj4NCiAgICAgICAgICAgICAgICAgICAgIDx2MTM6U04+JHt1cmlbNV19PC92MTM6U04+DQogICAgICAgICAgICAgICAgICA8L3YxOk1TSVNETj4NCiAgICAgICAgICAgICAgIDwvdjE6QXNzZXQ+DQogICAgICAgICAgICA8L3YxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgIDwvdjE6Qm9keT4NCiAgICAgIDwvdjE6R2V0X0N1c3RvbWVyUGFydHlMb2dpY2FsUmVzb3VyY2VTcGVjX1JFUT4NCiAgIDwvc29hcDpCb2R5Pg0KPC9zb2FwOkVudmVsb3BlPg=="/>
                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="message"/>
                </L7p:SetVariable>
                <L7p:HttpRoutingAssertion>
                    <L7p:FailOnErrorStatus booleanValue="false"/>
                    <L7p:HttpMethod httpMethod="POST"/>
                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.pre.hostname}/ESC/CustomerPartyLogicalResourceSpec/v1"/>
                    <L7p:ProxyPassword stringValueNull="null"/>
                    <L7p:ProxyUsername stringValueNull="null"/>
                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:CustomizeValue stringValue="http://www.entel.cl/EBM/CustomerPartyLogicalResourceSpec/Get/v1"/>
                                <L7p:Name stringValue="SOAPAction"/>
                                <L7p:UsesCustomizedValue booleanValue="true"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:RequestHeaderRules>
                    <L7p:RequestMsgSrc stringValue="message"/>
                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included"/>
                    </L7p:RequestParamRules>
                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Set-Cookie"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:ResponseHeaderRules>
                    <L7p:ResponseMsgDest stringValue="serviceResponse"/>
                    <L7p:SamlAssertionVersion intValue="2"/>
                </L7p:HttpRoutingAssertion>
                <L7p:XslTransformation>
                    <L7p:Direction intValue="-1"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy />
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                    </L7p:ResourceInfo>
                    <L7p:Target target="OTHER"/>
                    <L7p:TransformName stringValue=""/>
                    <L7p:XsltVersion stringValue="1.0"/>
                </L7p:XslTransformation>
                <L7p:XslTransformation>
                    <L7p:Direction intValue="-1"/>
                    <L7p:MsgVarPrefix stringValue="xslt2"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.)]">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                    </L7p:ResourceInfo>
                    <L7p:Target target="OTHER"/>
                    <L7p:TransformName stringValue=""/>
                    <L7p:XsltVersion stringValue="1.0"/>
                </L7p:XslTransformation>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2UubWFpbnBhcnR9"/>
                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="jsonRsp"/>
                </L7p:SetVariable>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".Result.status"/>
                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="status"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".SourceError.code"/>
                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="codeRsp"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".SourceError.description"/>
                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="descriptRsp"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".CanonicalError.code"/>
                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="codeResp"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".CanonicalError.description"/>
                    <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="codeDescription"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                    <L7p:Expression2 stringValue="200"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="200"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status.result}"/>
                            <L7p:Expression2 stringValue="OK"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="OK"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="UHJvY2VzYW1pZW50byBjb25jbHVpZG8gZXhpdG9zYW1lbnRl"/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".GetCustomerPartyLogicalResourceSpec_RSP.Body"/>
                            <L7p:OtherTargetMessageVariable stringValue="jsonRsp"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="bodyRsp"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyRsp.result"/>
                            <L7p:Regex stringValue="^\{|^}$"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:HardcodedResponse>
                            <L7p:Base64ResponseBody stringValue="ewogICAgInJlc3VsdCI6IHsKICAgICAgICAidHJhbnNhY3Rpb25JZCI6ICIke3JlcXVlc3RJZH0iLAogICAgICAgICJjb2RlIjogIiR7Y29kZVJlc3AucmVzdWx0fSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7Y29kZURlc2NyaXB0aW9ufSIsCiAgICAgICAgImRlc2NyaXB0aW9uRGV0YWlsIjogIiR7Y29kZURlc2NyaXB0aW9uLnJlc3VsdH0iLAogICAgICAgICJyZXNwb25zZVRpbWVzdGFtcCI6ICIke3Jlc3BvbnNlVGltZXN0YW1wfSIKICAgIH0sCiAgICAke2JvZHlSc3AucmVzdWx0fQp9"/>
                            <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        </L7p:HardcodedResponse>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status.result}"/>
                            <L7p:Expression2 stringValue="WARNING"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="WARNING"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RW50aWRhZCBubyBwcm9jZXNhZGE="/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "${codeRsp.result}",
        "description": "${codeDescription}",
        "descriptionDetail": "${descriptRsp.result}",
        "responseTimestamp": "${responseTimestamp}"
    }
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgaW50ZXJubyBlbiBlbCBzZXJ2aWRvcg=="/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="500"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "${codeRsp.result}",
        "description": "${codeDescription}",
        "descriptionDetail": "${descriptRsp.result}",
        "responseTimestamp": "${responseTimestamp}"
    }
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                    </wsp:All>
                </wsp:OneOrMore>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status.result}"/>
                            <L7p:Expression2 stringValue="WARNING"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="WARNING"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="${httpRouting.reasonCode}"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "${codeRsp.result}",
        "description": "${codeDescription}",
        "descriptionDetail": "${descriptRsp.result}",
        "responseTimestamp": "${responseTimestamp}"
    }
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                    </wsp:All>
                </wsp:OneOrMore>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Expression2 stringValue="500"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="500"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3I="/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Expression2 stringValue="400"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="400"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="UGV0aWNpw7NuIGluY29ycmVjdGE="/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Expression2 stringValue="422"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="422"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RW50aWRhZCBubyBwcm9jZXNhZGE="/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Expression2 stringValue="404"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="404"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:Encapsulated>
                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="${httpRouting.reasonCode}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                </L7p:Encapsulated>
                                <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "404",
        "description": "No encontrado",
        "descriptionDetail": "Recurso no encontrado",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="404"/>
                                </L7p:CustomizeErrorResponse>
                                <L7p:RaiseError/>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="CASO MAINPART NULL"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                            <wsp:All wsp:Usage="Required">
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue="AGREGAR JSON PATH OR XPATH DEPENDIENDO DE DONDE SE QUIERAN OBTENER LOS DATOS"/>
                                </L7p:CommentAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue=""/>
                                    <L7p:VariableToSet stringValue="code"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue=""/>
                                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                                </L7p:SetVariable>
                                <L7p:Encapsulated>
                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                    <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="${httpRouting.reasonCode}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                </L7p:Encapsulated>
                                <L7p:CustomizeErrorResponse>
                                    <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "${code}",
        "description": "No encontrado",
        "descriptionDetail": "${description}",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                                    <L7p:HttpStatus stringValue="404"/>
                                </L7p:CustomizeErrorResponse>
                                <L7p:RaiseError/>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="CASO CON BODY"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                        </wsp:OneOrMore>
                    </wsp:All>
                    <wsp:All L7p:Enabled="false" wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                            <L7p:Expression2 stringValue="500"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:RightValue stringValue="500"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="SW50ZXJuYWwgU2VydmVyIEVycm9y"/>
                            <L7p:VariableToSet stringValue="codeDescription"/>
                        </L7p:SetVariable>
                    </wsp:All>
                </wsp:OneOrMore>
            </wsp:All>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="1b3f18a3-5e88-4cae-9fae-44b459727ac1"/>
            </L7p:Include>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>