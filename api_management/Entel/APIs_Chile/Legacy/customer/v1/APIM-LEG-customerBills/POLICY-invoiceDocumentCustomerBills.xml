<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${request.http.header.AccessToken}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Negated booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="QTE="/>
                    <L7p:VariableToSet stringValue="code"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="SW52YWxpZCBwYXJhbWV0ZXI="/>
                    <L7p:VariableToSet stringValue="description"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="UGFyw6FtZXRybyBkZSBoZWFkZXIgQWNjZXNzVG9rZW4gZXMgb2JsaWdhdG9yaW8="/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                </L7p:SetVariable>
                <L7p:AuditDetailAssertion>
                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                    <L7p:Detail stringValue="TRANSACTION: ${requestId} CODE: ${code} DESCRIPTION: ${description} DETAIL: ${descriptionDetail}"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                    <L7p:HttpStatus stringValue="400"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="//AccessToken - Valida que no este vacio"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:JSONSchema>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/root.json",
  "type": "object",
  "title": "The Root Schema",
  "required": [
    "RUT",
    "VISTA"
  ],
  "properties": {
    "EXVKO": {
      "$id": "#/properties/EXVKO",
      "type": "string",
      "title": "The Exvko Schema",
      "default": "",
      "examples": [
        ""
      ],
      "pattern": "^(.*)$"
    },
    "EXVKO_LAST": {
      "$id": "#/properties/EXVKO_LAST",
      "type": "string",
      "title": "The Exvko_last Schema",
      "default": "",
      "examples": [
        ""
      ],
      "pattern": "^(.*)$"
    },
    "LIMITE": {
      "$id": "#/properties/LIMITE",
      "type": "string",
      "title": "The Limite Schema",
      "default": "",
      "examples": [
        ""
      ],
      "pattern": "^(.*)$"
    },
    "MESES": {
      "$id": "#/properties/MESES",
      "type": "string",
      "title": "The Meses Schema",
      "default": "",
      "examples": [
        "70"
      ],
      "pattern": "^(.*)$"
    },
    "RUT": {
      "$id": "#/properties/RUT",
      "type": "string",
      "title": "The Rut Schema",
      "default": "",
      "examples": [
        "15188369-9"
      ],
      "pattern": "^(.*)$"
    },
    "SORT_FEC": {
      "$id": "#/properties/SORT_FEC",
      "type": "string",
      "title": "The Sort_fec Schema",
      "default": "",
      "examples": [
        ""
      ],
      "pattern": "^(.*)$"
    },
    "VISTA": {
      "$id": "#/properties/VISTA",
      "type": "string",
      "title": "The Vista Schema",
      "default": "",
      "examples": [
        "1"
      ],
      "pattern": "^(.*)$"
    },
    "XBLNR": {
      "$id": "#/properties/XBLNR",
      "type": "string",
      "title": "The Xblnr Schema",
      "default": "",
      "examples": [
        ""
      ],
      "pattern": "^(.*)$"
    },
    "XBLNR_LAST": {
      "$id": "#/properties/XBLNR_LAST",
      "type": "string",
      "title": "The Xblnr_last Schema",
      "default": "",
      "examples": [
        ""
      ],
      "pattern": "^(.*)$"
    },
    "LNEGOCIO": {
      "$id": "#/properties/LNEGOCIO",
      "type": "array",
      "title": "The Lnegocio Schema",
      "items": {
        "$id": "#/properties/LNEGOCIO/items",
        "type": "object",
        "title": "The Items Schema",
        "required": [
          "item"
        ],
        "properties": {
          "item": {
            "$id": "#/properties/LNEGOCIO/items/properties/item",
            "type": "object",
            "title": "The Item Schema",
            "required": [
              "PRODUCTO"
            ],
            "properties": {
              "PRODUCTO": {
                "$id": "#/properties/LNEGOCIO/items/properties/item/properties/PRODUCTO",
                "type": "string",
                "title": "The Producto Schema",
                "default": "",
                "examples": [
                  "1234"
                ],
                "pattern": "^(.*)$"
              }
            }
          }
        }
      }
    },
    "ZRMCA_O_PROD": {
      "$id": "#/properties/ZRMCA_O_PROD",
      "type": "object",
      "title": "The Zrmca_o_prod Schema",
      "required": [
        "item"
      ],
      "properties": {
        "item": {
          "$id": "#/properties/ZRMCA_O_PROD/properties/item",
          "type": "array",
          "title": "The Item Schema",
          "items": {
            "$id": "#/properties/ZRMCA_O_PROD/properties/item/items",
            "type": "object",
            "title": "The Items Schema",
            "required": [
              "PRODUCTO",
              "SALDO"
            ],
            "properties": {
              "PRODUCTO": {
                "$id": "#/properties/ZRMCA_O_PROD/properties/item/items/properties/PRODUCTO",
                "type": "string",
                "title": "The Producto Schema",
                "default": "",
                "examples": [
                  ""
                ],
                "pattern": "^(.*)$"
              },
              "SALDO": {
                "$id": "#/properties/ZRMCA_O_PROD/properties/item/items/properties/SALDO",
                "type": "string",
                "title": "The Saldo Schema",
                "default": "",
                "examples": [
                  ""
                ],
                "pattern": "^(.*)$"
              }
            }
          }
        }
      }
    }
  }
}]]></L7p:Document>
                    </L7p:ResourceInfo>
                </L7p:JSONSchema>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="QTE="/>
                    <L7p:VariableToSet stringValue="code"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="RXNxdWVtYSBJbmNvcnJlY3RvLg=="/>
                    <L7p:VariableToSet stringValue="description"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="RXN0cnVjdHVyYSBkZSBKc29uIGludsOhbGlkbw=="/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                </L7p:SetVariable>
                <L7p:AuditDetailAssertion>
                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                    <L7p:Detail stringValue="TRANSACTION: ${requestId} CODE: ${code} DESCRIPTION: ${description} DETAIL: ${descriptionDetail}"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                    <L7p:HttpStatus stringValue="400"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="Json Schema - Validar Parámetros"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".EXVKO"/>
                    <L7p:VariablePrefix stringValue="exvko"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".EXVKO_LAST"/>
                    <L7p:VariablePrefix stringValue="exvko_last"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".LIMITE"/>
                    <L7p:VariablePrefix stringValue="limite"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".MESES"/>
                    <L7p:VariablePrefix stringValue="meses"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".RUT"/>
                    <L7p:VariablePrefix stringValue="rut"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".SORT_FEC"/>
                    <L7p:VariablePrefix stringValue="sort_fec"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".VISTA"/>
                    <L7p:VariablePrefix stringValue="vista"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".XBLNR"/>
                    <L7p:VariablePrefix stringValue="xblnr"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".XBLNR_LAST"/>
                    <L7p:VariablePrefix stringValue="xblnr_last"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".LNEGOCIO"/>
                    <L7p:VariablePrefix stringValue="lnegocio"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".ZRMCA_O_PROD.item"/>
                    <L7p:VariablePrefix stringValue="zrmca_o_prod"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:VariableToSet stringValue="listLNEGOCIO"/>
                </L7p:SetVariable>
                <L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="lnegocio.results" variablePrefix="aux">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                        <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="messageInJson"/>
                    </L7p:SetVariable>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue=".item.PRODUCTO"/>
                        <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                        <L7p:Target target="OTHER"/>
                        <L7p:VariablePrefix stringValue="producto"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtsaXN0TE5FR09DSU99DQo8aXRlbT48UFJPRFVDVE8+JHtwcm9kdWN0by5yZXN1bHR9PC9QUk9EVUNUTz48L2l0ZW0+"/>
                        <L7p:VariableToSet stringValue="listLNEGOCIO"/>
                    </L7p:SetVariable>
                </L7p:ForEachLoop>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:VariableToSet stringValue="listZRMCA_O_PROD"/>
                </L7p:SetVariable>
                <L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="zrmca_o_prod.results" variablePrefix="aux">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                        <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="messageInJson"/>
                    </L7p:SetVariable>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue=".PRODUCTO"/>
                        <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                        <L7p:Target target="OTHER"/>
                        <L7p:VariablePrefix stringValue="producto"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue=".SALDO"/>
                        <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                        <L7p:Target target="OTHER"/>
                        <L7p:VariablePrefix stringValue="saldo"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtsaXN0WlJNQ0FfT19QUk9EfQ0KPGl0ZW0+PFBST0RVQ1RPPiR7cHJvZHVjdG8ucmVzdWx0fTwvUFJPRFVDVE8+DQoJPFNBTERPPiR7c2FsZG8ucmVzdWx0fTwvU0FMRE8+DQo8L2l0ZW0+"/>
                        <L7p:VariableToSet stringValue="listZRMCA_O_PROD"/>
                    </L7p:SetVariable>
                </L7p:ForEachLoop>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="PHNvYXBlbnY6RW52ZWxvcGUgeG1sbnM6c29hcGVudj0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iIHhtbG5zOnVybj0idXJuOnNhcC1jb206ZG9jdW1lbnQ6c2FwOnJmYzpmdW5jdGlvbnMiPg0KICAgPHNvYXBlbnY6SGVhZGVyLz4NCiAgIDxzb2FwZW52OkJvZHk+DQogICAgICA8dXJuOlpSTUNBX1JGQ19DT05TX1BPUlRBTD4NCiAgICAgICAgIDwhLS1Zb3UgbWF5IGVudGVyIHRoZSBmb2xsb3dpbmcgMTIgaXRlbXMgaW4gYW55IG9yZGVyLS0+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9FWFZLTz4ke2V4dmtvLnJlc3VsdH08L0lfRVhWS08+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9FWFZLT19MQVNUPiR7ZXh2a29fbGFzdC5yZXN1bHR9PC9JX0VYVktPX0xBU1Q+DQogICAgICAgICA8SV9MSU1JVEU+JHtsaW1pdGUucmVzdWx0fTwvSV9MSU1JVEU+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9NRVNFUz4ke21lc2VzLnJlc3VsdH08L0lfTUVTRVM+DQogICAgICAgICA8SV9SVVQ+JHtydXQucmVzdWx0fTwvSV9SVVQ+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9TT1JUX0ZFQz4ke3NvcnRfZmVjLnJlc3VsdH08L0lfU09SVF9GRUM+DQogICAgICAgICA8SV9WSVNUQT4ke3Zpc3RhLnJlc3VsdH08L0lfVklTVEE+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9YQkxOUj4ke3hibG5yLnJlc3VsdH08L0lfWEJMTlI+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9YQkxOUl9MQVNUPiR7eGJsbnJfbGFzdC5yZXN1bHR9PC9JX1hCTE5SX0xBU1Q+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8VF9MTkVHT0NJTz4NCiAgICAgICAgICAgIAkJJHtsaXN0TE5FR09DSU99DQogICAgICAgICA8L1RfTE5FR09DSU8+DQogICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8WlJNQ0FfT19QUk9EPg0KICAgICAgICAgICAgPCEtLVplcm8gb3IgbW9yZSByZXBldGl0aW9uczotLT4NCiAgICAgDQogICAgICAgICAgICAgICAJICR7bGlzdFpSTUNBX09fUFJPRH0NCiAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDoNCiAgICAgICAgICAgICAgIDxQUk9EVUNUTz4ke1pSTUNBX09fUFJPRC5pdGVtLnJlc3VsdH08L1BST0RVQ1RPPi0tPg0KICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOg0KICAgICAgICAgICAgICAgPFNBTERPPiR7c2FsZG8ucmVzdWx0fTwvU0FMRE8+LS0+DQogICAgICANCiAgICAgICAgIDwvWlJNQ0FfT19QUk9EPg0KDQogICAgICA8L3VybjpaUk1DQV9SRkNfQ09OU19QT1JUQUw+DQogICA8L3NvYXBlbnY6Qm9keT4NCjwvc29hcGVudjpFbnZlbG9wZT4="/>
                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="xmlMessage"/>
                </L7p:SetVariable>
                <L7p:HttpRoutingAssertion>
                    <L7p:FailOnErrorStatus booleanValue="false"/>
                    <L7p:HttpMethod httpMethod="POST"/>
                    <L7p:Login stringValue="UI_PRTL_EMP"/>
                    <L7p:Password stringValue="3mpR3s4s"/>
                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.sappi.hostname}/XISOAPAdapter/MessageServlet?senderParty=&amp;senderService=ENTELF_PORTAL_EMPRESA_D&amp;receiverParty=&amp;receiverService=&amp;interface=CuentaContratoConsulta_Out&amp;interfaceNamespace=urn%3Aempresas.entel.cl%2Ffija%3Arecaudacion%3APORTAL%3AEmpresa%3ACuentaContrato"/>
                    <L7p:ProxyPassword stringValueNull="null"/>
                    <L7p:ProxyUsername stringValueNull="null"/>
                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Cookie"/>
                            </L7p:item>
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="SOAPAction"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:RequestHeaderRules>
                    <L7p:RequestMsgSrc stringValue="xmlMessage"/>
                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included"/>
                    </L7p:RequestParamRules>
                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Set-Cookie"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:ResponseHeaderRules>
                    <L7p:ResponseMsgDest stringValue="serviceResponse"/>
                    <L7p:SamlAssertionVersion intValue="2"/>
                </L7p:HttpRoutingAssertion>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                    <L7p:Expression2 stringValue="200"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="200"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ResponseXpathAssertion>
                    <L7p:VariablePrefix stringValue="codeResult"/>
                    <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                    <L7p:XpathExpression xpathExpressionValue="included">
                        <L7p:Expression stringValue="/SOAP:Envelope/SOAP:Body/n0:ZRMCA_RFC_CONS_PORTAL.Response/E_CODOK"/>
                        <L7p:Namespaces mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="urn"/>
                                <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="n0"/>
                                <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="S"/>
                                <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="soapenv"/>
                                <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="ns"/>
                                <L7p:value stringValue="http://www.esa.com/Enterprise/Enterprise/T/consultarCuentaPorLineaNegocioOSYSWS/schema"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="prx"/>
                                <L7p:value stringValue="urn:sap.com:proxy:CCD:/1SAI/TASA2F1C20F4E1A261BCFB8:700:2008/06/25"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="ns0"/>
                                <L7p:value stringValue="http://www.esa.com/MarketSales/ContractMgmt/T/consultarDetalleContratoPorRutOSYSWS/schema"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="v1"/>
                                <L7p:value stringValue="http://www.amdocs.com/engage/integration/nbo/v1"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="SOAP"/>
                                <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="xsi"/>
                                <L7p:value stringValue="http://www.w3.org/2001/XMLSchema-instance"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="v5"/>
                                <L7p:value stringValue="http://www.amdocs.com/engage/integration/common/integration-common/v5"/>
                            </L7p:entry>
                        </L7p:Namespaces>
                        <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                    </L7p:XpathExpression>
                </L7p:ResponseXpathAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${codeResult.result}"/>
                            <L7p:Expression2 stringValue="0000"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="0000"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy />
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="1.0"/>
                        </L7p:XslTransformation>
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:MsgVarPrefix stringValue="xslt2"/>
                            <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.) or name(.) = 'item']">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="1.0"/>
                        </L7p:XslTransformation>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2UubWFpbnBhcnR9"/>
                            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="responseJson"/>
                        </L7p:SetVariable>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".Body"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="bodyResult"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHttZXNnZVJlc3VsdC5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="UHJvY2VzYW1pZW50byBjb25jbHXDrWRvIGV4aXRvc2FtZW50ZQ=="/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="&quot;E_CODOK.+?,"/>
                            <L7p:RegexName stringValue="Elimina CODOK"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="&quot;E_MESGE.+?"/>
                            <L7p:RegexName stringValue="Elimina MESGE"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="^\{|^}"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:HardcodedResponse>
                            <L7p:Base64ResponseBody stringValue="ewoJInJlc3VsdCI6IHsKCQkidHJhbnNhY3Rpb25JZCI6ICIke3JlcXVlc3RJZH0iLAoJCSJjb2RlIjogIiR7Y29kZVJlc3VsdC5yZXN1bHR9IiwKCQkiZGVzY3JpcHRpb24iOiAiJHtkZXNjcmlwdGlvbn0iLAoJCSJkZXNjcmlwdGlvbkRldGFpbCI6ICIke2Rlc2NyaXB0aW9uRGV0YWlsfSIsCgkJInJlc3BvbnNlVGltZXN0YW1wIjogIiR7cmVzcG9uc2VUaW1lc3RhbXB9IgoJfSwKCSR7Ym9keVJlc3VsdC5yZXN1bHR9Cg=="/>
                            <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        </L7p:HardcodedResponse>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="operacion exitosa"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${codeResult.result}"/>
                            <L7p:Expression2 stringValue="0001"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="0001"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="mesgeResult"/>
                            <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/SOAP:Envelope/SOAP:Body/n0:ZRMCA_RFC_CONS_PORTAL.Response/E_MESGE"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="urn"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="n0"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="S"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns"/>
                                    <L7p:value stringValue="http://www.esa.com/Enterprise/Enterprise/T/consultarCuentaPorLineaNegocioOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="prx"/>
                                    <L7p:value stringValue="urn:sap.com:proxy:CCD:/1SAI/TASA2F1C20F4E1A261BCFB8:700:2008/06/25"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns0"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/ContractMgmt/T/consultarDetalleContratoPorRutOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v1"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/nbo/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="SOAP"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="xsi"/>
                                    <L7p:value stringValue="http://www.w3.org/2001/XMLSchema-instance"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v5"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/common/integration-common/v5"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgZGUgbmVnb2Npby4="/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHttZXNnZVJlc3VsdC5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
	"result": {
		"transactionId": "${requestId}",
		"code": "${codeResult.result}",
		"description": "${description}",
		"descriptionDetail": "${descriptionDetail}",
		"responseTimestamp": "${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="error de negocio"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="mesgeResult"/>
                            <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/SOAP:Envelope/SOAP:Body/n0:ZRMCA_RFC_CONS_PORTAL.Response/E_MESGE"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="urn"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="n0"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="S"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns"/>
                                    <L7p:value stringValue="http://www.esa.com/Enterprise/Enterprise/T/consultarCuentaPorLineaNegocioOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="prx"/>
                                    <L7p:value stringValue="urn:sap.com:proxy:CCD:/1SAI/TASA2F1C20F4E1A261BCFB8:700:2008/06/25"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns0"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/ContractMgmt/T/consultarDetalleContratoPorRutOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v1"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/nbo/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="SOAP"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="xsi"/>
                                    <L7p:value stringValue="http://www.w3.org/2001/XMLSchema-instance"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v5"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/common/integration-common/v5"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgZGUgbmVnb2Npbw=="/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHttZXNnZVJlc3VsdC5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                            <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart} "/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="error de negocio"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="OK"/>
                        </L7p:entry>
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="Código 200."/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:Encapsulated>
                    <L7p:EncapsulatedAssertionConfigGuid stringValue="14295f18-da19-4f0e-9643-a8c30b3544dc"/>
                    <L7p:EncapsulatedAssertionConfigName stringValue="CodeStatus"/>
                </L7p:Encapsulated>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtodHRwUm91dGluZy5yZWFzb25Db2RlfQ=="/>
                    <L7p:VariableToSet stringValue="code"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtjb2RlRGVzY3JpcHRpb259"/>
                    <L7p:VariableToSet stringValue="description"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbkRldGFpbC5yZXN1bHR9"/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Enabled booleanValue="false"/>
                    <L7p:Expression stringValue=".SourceError.description"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:Target target="OTHER"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtqc29uUGF0aC5yZXN1bHR9"/>
                    <L7p:Enabled booleanValue="false"/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30="/>
                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                </L7p:SetVariable>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="1b3f18a3-5e88-4cae-9fae-44b459727ac1"/>
            </L7p:Include>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="logica"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".EXVKO"/>
                    <L7p:VariablePrefix stringValue="exvko"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".EXVKO_LAST"/>
                    <L7p:VariablePrefix stringValue="exvko_last"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".LIMITE"/>
                    <L7p:VariablePrefix stringValue="limite"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".MESES"/>
                    <L7p:VariablePrefix stringValue="meses"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".RUT"/>
                    <L7p:VariablePrefix stringValue="rut"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".SORT_FEC"/>
                    <L7p:VariablePrefix stringValue="sort_fec"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".VISTA"/>
                    <L7p:VariablePrefix stringValue="vista"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".XBLNR"/>
                    <L7p:VariablePrefix stringValue="xblnr"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".XBLNR_LAST"/>
                    <L7p:VariablePrefix stringValue="xblnr_last"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".LNEGOCIO"/>
                    <L7p:VariablePrefix stringValue="lnegocio"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".ZRMCA_O_PROD"/>
                    <L7p:VariablePrefix stringValue="zrmca_o_prod"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:VariableToSet stringValue="listLNEGOCIO"/>
                </L7p:SetVariable>
                <L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="lnegocio.results" variablePrefix="aux">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                        <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="messageInJson"/>
                    </L7p:SetVariable>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue=".item.PRODUCTO"/>
                        <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                        <L7p:Target target="OTHER"/>
                        <L7p:VariablePrefix stringValue="producto"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtsaXN0TE5FR09DSU99DQo8aXRlbT48UFJPRFVDVE8+JHtwcm9kdWN0by5yZXN1bHR9PC9QUk9EVUNUTz48L2l0ZW0+"/>
                        <L7p:VariableToSet stringValue="listLNEGOCIO"/>
                    </L7p:SetVariable>
                </L7p:ForEachLoop>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:VariableToSet stringValue="listZRMCA_O_PROD"/>
                </L7p:SetVariable>
                <L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="zrmca_o_prod.results" variablePrefix="aux">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                        <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="messageInJson"/>
                    </L7p:SetVariable>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue="item.PRODUCTO"/>
                        <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                        <L7p:Target target="OTHER"/>
                        <L7p:VariablePrefix stringValue="producto"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue="item.SALDO"/>
                        <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                        <L7p:Target target="OTHER"/>
                        <L7p:VariablePrefix stringValue="saldo"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtsaXN0WlJNQ0FfT19QUk9EfQ0KPGl0ZW0+PFBST0RVQ1RPPiR7cHJvZHVjdG8ucmVzdWx0fTwvUFJPRFVDVE8+DQoJPFNBTERPPiR7c2FsZG8ucmVzdWx0fTwvU0FMRE8+DQo8L2l0ZW0+"/>
                        <L7p:VariableToSet stringValue="listZRMCA_O_PROD"/>
                    </L7p:SetVariable>
                </L7p:ForEachLoop>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="PHNvYXBlbnY6RW52ZWxvcGUgeG1sbnM6c29hcGVudj0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iIHhtbG5zOnVybj0idXJuOnNhcC1jb206ZG9jdW1lbnQ6c2FwOnJmYzpmdW5jdGlvbnMiPg0KICAgPHNvYXBlbnY6SGVhZGVyLz4NCiAgIDxzb2FwZW52OkJvZHk+DQogICAgICA8dXJuOlpSTUNBX1JGQ19DT05TX1BPUlRBTD4NCiAgICAgICAgIDwhLS1Zb3UgbWF5IGVudGVyIHRoZSBmb2xsb3dpbmcgMTIgaXRlbXMgaW4gYW55IG9yZGVyLS0+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9FWFZLTz4ke2V4dmtvLnJlc3VsdH08L0lfRVhWS08+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9FWFZLT19MQVNUPiR7ZXh2a29fbGFzdC5yZXN1bHR9PC9JX0VYVktPX0xBU1Q+DQogICAgICAgICA8SV9MSU1JVEU+JHtsaW1pdGUucmVzdWx0fTwvSV9MSU1JVEU+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9NRVNFUz4ke21lc2VzLnJlc3VsdH08L0lfTUVTRVM+DQogICAgICAgICA8SV9SVVQ+JHtydXQucmVzdWx0fTwvSV9SVVQ+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9TT1JUX0ZFQz4ke3NvcnRfZmVjLnJlc3VsdH08L0lfU09SVF9GRUM+DQogICAgICAgICA8SV9WSVNUQT4ke3Zpc3RhLnJlc3VsdH08L0lfVklTVEE+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9YQkxOUj4ke3hibG5yLnJlc3VsdH08L0lfWEJMTlI+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8SV9YQkxOUl9MQVNUPiR7eGJsbnJfbGFzdC5yZXN1bHR9PC9JX1hCTE5SX0xBU1Q+DQogICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8VF9MTkVHT0NJTz4NCiAgICAgICAgICAgIAkJJHtsaXN0TE5FR09DSU99DQogICAgICAgICA8L1RfTE5FR09DSU8+DQogICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICA8WlJNQ0FfT19QUk9EPg0KICAgICAgICAgICAgPCEtLVplcm8gb3IgbW9yZSByZXBldGl0aW9uczotLT4NCiAgICAgDQogICAgICAgICAgICAgICAJICR7bGlzdFpSTUNBX09fUFJPRH0gICAgICANCiAgICAgICAgIDwvWlJNQ0FfT19QUk9EPg0KDQogICAgICA8L3VybjpaUk1DQV9SRkNfQ09OU19QT1JUQUw+DQogICA8L3NvYXBlbnY6Qm9keT4NCjwvc29hcGVudjpFbnZlbG9wZT4="/>
                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="xmlMessage"/>
                </L7p:SetVariable>
                <L7p:HttpRoutingAssertion>
                    <L7p:FailOnErrorStatus booleanValue="false"/>
                    <L7p:HttpMethod httpMethod="POST"/>
                    <L7p:Login stringValue="UI_PRTL_EMP"/>
                    <L7p:Password stringValue="3NT3L3mpr3s4s"/>
                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.sappi.hostname}/XISOAPAdapter/MessageServlet?senderParty=&amp;senderService=ENTELF_PORTAL_EMPRESA_Q&amp;receiverParty=&amp;receiverService=&amp;interface=CuentaContratoConsulta_Out&amp;interfaceNamespace=urn:empresas.entel.cl/fija:recaudacion:PORTAL:Empresa:CuentaContrato"/>
                    <L7p:ProxyPassword stringValueNull="null"/>
                    <L7p:ProxyUsername stringValueNull="null"/>
                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Cookie"/>
                            </L7p:item>
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="SOAPAction"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:RequestHeaderRules>
                    <L7p:RequestMsgSrc stringValue="xmlMessage"/>
                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included"/>
                    </L7p:RequestParamRules>
                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Set-Cookie"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:ResponseHeaderRules>
                    <L7p:ResponseMsgDest stringValue="serviceResponse"/>
                    <L7p:SamlAssertionVersion intValue="2"/>
                </L7p:HttpRoutingAssertion>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                    <L7p:Expression2 stringValue="200"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="200"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ResponseXpathAssertion>
                    <L7p:VariablePrefix stringValue="codeResult"/>
                    <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                    <L7p:XpathExpression xpathExpressionValue="included">
                        <L7p:Expression stringValue="/SOAP:Envelope/SOAP:Body/n0:ZRMCA_RFC_CONS_PORTAL.Response/E_CODOK"/>
                        <L7p:Namespaces mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="urn"/>
                                <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="n0"/>
                                <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="S"/>
                                <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="soapenv"/>
                                <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="ns"/>
                                <L7p:value stringValue="http://www.esa.com/Enterprise/Enterprise/T/consultarCuentaPorLineaNegocioOSYSWS/schema"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="prx"/>
                                <L7p:value stringValue="urn:sap.com:proxy:CCD:/1SAI/TASA2F1C20F4E1A261BCFB8:700:2008/06/25"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="ns0"/>
                                <L7p:value stringValue="http://www.esa.com/MarketSales/ContractMgmt/T/consultarDetalleContratoPorRutOSYSWS/schema"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="v1"/>
                                <L7p:value stringValue="http://www.amdocs.com/engage/integration/nbo/v1"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="SOAP"/>
                                <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="xsi"/>
                                <L7p:value stringValue="http://www.w3.org/2001/XMLSchema-instance"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="v5"/>
                                <L7p:value stringValue="http://www.amdocs.com/engage/integration/common/integration-common/v5"/>
                            </L7p:entry>
                        </L7p:Namespaces>
                        <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                    </L7p:XpathExpression>
                </L7p:ResponseXpathAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${codeResult.result}"/>
                            <L7p:Expression2 stringValue="0000"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="0000"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy />
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="1.0"/>
                        </L7p:XslTransformation>
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:MsgVarPrefix stringValue="xslt2"/>
                            <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.) or name(.) = 'item']">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="1.0"/>
                        </L7p:XslTransformation>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2UubWFpbnBhcnR9"/>
                            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="responseJson"/>
                        </L7p:SetVariable>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".Body"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="bodyResult"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="T3BlcmFjacOzbiBleGl0b3Nh"/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="UHJvY2VzYW1pZW50byBjb25jbHXDrWRvIGV4aXRvc2FtZW50ZQ=="/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="&quot;E_CODOK.+?,"/>
                            <L7p:RegexName stringValue="Elimina CODOK"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="&quot;E_MESGE.+?"/>
                            <L7p:RegexName stringValue="Elimina MESGE"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="^\{|^}"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:HardcodedResponse>
                            <L7p:Base64ResponseBody stringValue="ewoJInJlc3VsdCI6IHsKCQkidHJhbnNhY3Rpb25JZCI6ICIke3JlcXVlc3RJZH0iLAoJCSJjb2RlIjogIiR7Y29kZVJlc3VsdC5yZXN1bHR9IiwKCQkiZGVzY3JpcHRpb24iOiAiJHtkZXNjcmlwdGlvbn0iLAoJCSJkZXNjcmlwdGlvbkRldGFpbCI6ICIke2Rlc2NyaXB0aW9uRGV0YWlsfSIsCgkJInJlc3BvbnNlVGltZXN0YW1wIjogIiR7cmVzcG9uc2VUaW1lc3RhbXB9IgoJfSwKCSR7Ym9keVJlc3VsdC5yZXN1bHR9Cg=="/>
                            <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        </L7p:HardcodedResponse>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="operacion exitosa"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${codeResult.result}"/>
                            <L7p:Expression2 stringValue="0001"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="0001"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="mesgeResult"/>
                            <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/SOAP:Envelope/SOAP:Body/n0:ZRMCA_RFC_CONS_PORTAL.Response/E_MESGE"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="urn"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="n0"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="S"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns"/>
                                    <L7p:value stringValue="http://www.esa.com/Enterprise/Enterprise/T/consultarCuentaPorLineaNegocioOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="prx"/>
                                    <L7p:value stringValue="urn:sap.com:proxy:CCD:/1SAI/TASA2F1C20F4E1A261BCFB8:700:2008/06/25"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns0"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/ContractMgmt/T/consultarDetalleContratoPorRutOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v1"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/nbo/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="SOAP"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="xsi"/>
                                    <L7p:value stringValue="http://www.w3.org/2001/XMLSchema-instance"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v5"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/common/integration-common/v5"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgZGUgbmVnb2Npby4="/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHttZXNnZVJlc3VsdC5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
	"result": {
		"transactionId": "${requestId}",
		"code": "${codeResult.result}",
		"description": "${description}",
		"descriptionDetail": "${descriptionDetail}",
		"responseTimestamp": "${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="error de negocio"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlUmVzdWx0LnJlc3VsdH0="/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="mesgeResult"/>
                            <L7p:XmlMsgSrc stringValue="serviceResponse"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/SOAP:Envelope/SOAP:Body/n0:ZRMCA_RFC_CONS_PORTAL.Response/E_MESGE"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="urn"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="n0"/>
                                    <L7p:value stringValue="urn:sap-com:document:sap:rfc:functions"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="S"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns"/>
                                    <L7p:value stringValue="http://www.esa.com/Enterprise/Enterprise/T/consultarCuentaPorLineaNegocioOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="prx"/>
                                    <L7p:value stringValue="urn:sap.com:proxy:CCD:/1SAI/TASA2F1C20F4E1A261BCFB8:700:2008/06/25"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="ns0"/>
                                    <L7p:value stringValue="http://www.esa.com/MarketSales/ContractMgmt/T/consultarDetalleContratoPorRutOSYSWS/schema"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v1"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/nbo/v1"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="SOAP"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="xsi"/>
                                    <L7p:value stringValue="http://www.w3.org/2001/XMLSchema-instance"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="v5"/>
                                    <L7p:value stringValue="http://www.amdocs.com/engage/integration/common/integration-common/v5"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="RXJyb3IgZGUgbmVnb2Npbw=="/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHttZXNnZVJlc3VsdC5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="descriptionDetail"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                            <L7p:Detail stringValue="IDTRANSACTION: ${requestId} SERVICE: ${httpRouting.url} LATENCY: ${httpRouting.latency} HTTP STATUS: ${httpRouting.reasonCode} DESCRIPTION: ${description} DESCRIPTION: ${descriptionDetail} CODE: ${code} BODY: ${serviceResponse.mainpart} REQUEST:${request.mainpart} "/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="error de negocio"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="OK"/>
                        </L7p:entry>
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="Código 200."/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:Encapsulated>
                    <L7p:EncapsulatedAssertionConfigGuid stringValue="14295f18-da19-4f0e-9643-a8c30b3544dc"/>
                    <L7p:EncapsulatedAssertionConfigName stringValue="CodeStatus"/>
                </L7p:Encapsulated>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtodHRwUm91dGluZy5yZWFzb25Db2RlfQ=="/>
                    <L7p:VariableToSet stringValue="code"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtjb2RlRGVzY3JpcHRpb259"/>
                    <L7p:VariableToSet stringValue="description"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbkRldGFpbC5yZXN1bHR9"/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Enabled booleanValue="false"/>
                    <L7p:Expression stringValue=".SourceError.description"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:Target target="OTHER"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtqc29uUGF0aC5yZXN1bHR9"/>
                    <L7p:Enabled booleanValue="false"/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS1NTS1kZCdUJ0hIOm1tOnNzLlNTU30="/>
                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                </L7p:SetVariable>
                <L7p:AuditDetailAssertion>
                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                    <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${eventId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                    <L7p:Level stringValue="WARNING"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="1b3f18a3-5e88-4cae-9fae-44b459727ac1"/>
            </L7p:Include>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="logica"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>