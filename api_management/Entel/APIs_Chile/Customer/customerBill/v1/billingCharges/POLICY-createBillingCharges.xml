<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:Encapsulated>
                    <L7p:EncapsulatedAssertionConfigGuid stringValue="371f66e9-a471-4dfb-8e78-07c793ea10d3"/>
                    <L7p:EncapsulatedAssertionConfigName stringValue="Compose Bus Header"/>
                    <L7p:Parameters mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="format"/>
                            <L7p:value stringValue="XML"/>
                        </L7p:entry>
                        <L7p:entry>
                            <L7p:key stringValue="operationCode"/>
                            <L7p:value stringValue="SAAS100230"/>
                        </L7p:entry>
                    </L7p:Parameters>
                </L7p:Encapsulated>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".organizationName"/>
                    <L7p:VariablePrefix stringValue="organizationName"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".type"/>
                    <L7p:VariablePrefix stringValue="type"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".reference"/>
                    <L7p:VariablePrefix stringValue="reference"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".unit"/>
                    <L7p:VariablePrefix stringValue="unit"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".documentDate"/>
                    <L7p:VariablePrefix stringValue="documentDate"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".billingDate"/>
                    <L7p:VariablePrefix stringValue="billingDate"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".ZZ_CL_CTL_FACT"/>
                    <L7p:VariablePrefix stringValue="ZZ_CL_CTL_FACT"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".netAmount"/>
                    <L7p:VariablePrefix stringValue="netAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".amount"/>
                    <L7p:VariablePrefix stringValue="amount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".taxAmount"/>
                    <L7p:VariablePrefix stringValue="taxAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".nonBilledAmount"/>
                    <L7p:VariablePrefix stringValue="nonBilledAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber1"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber1"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber2"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber2"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber3"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber3"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber4"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber4"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber5"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber5"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber6"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber6"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber7"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber7"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber8"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber8"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber9"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber9"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber10"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber10"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber11"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber11"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".previousDocumentNumber12"/>
                    <L7p:VariablePrefix stringValue="previousDocumentNumber12"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".referenceDocumentType"/>
                    <L7p:VariablePrefix stringValue="referenceDocumentType"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".referenceDocumentNumber"/>
                    <L7p:VariablePrefix stringValue="referenceDocumentNumber"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".debitNoteReason"/>
                    <L7p:VariablePrefix stringValue="debitNoteReason"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".storeId"/>
                    <L7p:VariablePrefix stringValue="storeId"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".bscsBillingAccountId"/>
                    <L7p:VariablePrefix stringValue="bscsBillingAccountId"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".totalAmount"/>
                    <L7p:VariablePrefix stringValue="totalAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".SSOLICIT"/>
                    <L7p:VariablePrefix stringValue="SSOLICIT"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".documentType"/>
                    <L7p:VariablePrefix stringValue="documentType"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".documentNumber"/>
                    <L7p:VariablePrefix stringValue="documentNumber"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".gift"/>
                    <L7p:VariablePrefix stringValue="gift"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".billingCycle"/>
                    <L7p:VariablePrefix stringValue="billingCycle"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".accountID"/>
                    <L7p:VariablePrefix stringValue="accountID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".OCO"/>
                    <L7p:VariablePrefix stringValue="OCO"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".transactionID"/>
                    <L7p:VariablePrefix stringValue="transactionID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".points"/>
                    <L7p:VariablePrefix stringValue="points"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".newTotal"/>
                    <L7p:VariablePrefix stringValue="newTotal"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".storeCreditID"/>
                    <L7p:VariablePrefix stringValue="storeCreditID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".storeCreditAmount"/>
                    <L7p:VariablePrefix stringValue="storeCreditAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".returnAjustmentFlag"/>
                    <L7p:VariablePrefix stringValue="returnAjustmentFlag"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".FeeDiscount.name"/>
                    <L7p:VariablePrefix stringValue="name"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".FeeDiscount.documentType"/>
                    <L7p:VariablePrefix stringValue="documentType"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".FeeDiscount.documentNumber"/>
                    <L7p:VariablePrefix stringValue="documentNumber"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".FeeDiscount.fee"/>
                    <L7p:VariablePrefix stringValue="fee"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".billingExemptAmount"/>
                    <L7p:VariablePrefix stringValue="billingExemptAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".reasonCode"/>
                    <L7p:VariablePrefix stringValue="reasonCode"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".storeID"/>
                    <L7p:VariablePrefix stringValue="storeID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".contractID"/>
                    <L7p:VariablePrefix stringValue="contractID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".refundOperationType"/>
                    <L7p:VariablePrefix stringValue="refundOperationType"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".refundID"/>
                    <L7p:VariablePrefix stringValue="refundID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".refundAmount"/>
                    <L7p:VariablePrefix stringValue="refundAmount"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".refundCustomerID"/>
                    <L7p:VariablePrefix stringValue="refundCustomerID"/>
                </L7p:EvaluateJsonPathExpression>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue=""/>
                            <L7p:VariableToSet stringValue="listPointsRevocation"/>
                        </L7p:SetVariable>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="pointsRevocation.results" variablePrefix="aux">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                                <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="messageInJson"/>
                            </L7p:SetVariable>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".PointsRevocation.organizationName"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="organizationName"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".PointsRevocation.type"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="type"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".PointsRevocation.number"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="number"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".PointsRevocation.billingCode"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="billingCode"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".PointsRevocation.amount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="amount"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtsaXN0TE5FR09DSU99DQo8aXRlbT48UFJPRFVDVE8+JHtwcm9kdWN0by5yZXN1bHR9PC9QUk9EVUNUTz48L2l0ZW0+"/>
                                <L7p:VariableToSet stringValue="listLNEGOCIO"/>
                            </L7p:SetVariable>
                        </L7p:ForEachLoop>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue=""/>
                            <L7p:VariableToSet stringValue="listFeeRevocation"/>
                        </L7p:SetVariable>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="feeRevocation" variablePrefix="aux">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                                <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="messageInJson"/>
                            </L7p:SetVariable>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".FeeRevocation.organizationName"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="organizationName"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".FeeRevocation.type"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="type"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".FeeRevocation.number"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="number"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".FeeRevocation.quantity"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="quantity"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".FeeRevocation.amount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="amount"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtsaXN0WlJNQ0FfT19QUk9EfQ0KPGl0ZW0+PFBST0RVQ1RPPiR7cHJvZHVjdG8ucmVzdWx0fTwvUFJPRFVDVE8+DQoJPFNBTERPPiR7c2FsZG8ucmVzdWx0fTwvU0FMRE8+DQo8L2l0ZW0+"/>
                                <L7p:VariableToSet stringValue="listZRMCA_O_PROD"/>
                            </L7p:SetVariable>
                        </L7p:ForEachLoop>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue=""/>
                            <L7p:VariableToSet stringValue="listCompensationNote"/>
                        </L7p:SetVariable>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="compensationNote" variablePrefix="aux">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                                <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="messageInJson"/>
                            </L7p:SetVariable>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.documentType"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="documentType"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.number"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="number"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.billingCode"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="billingCode"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.amount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="amount"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.referenceDocumentType"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="referenceDocumentType"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.referenceDocumentNumber"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="referenceDocumentNumber"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.referenceDocumentBillingCode"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="referenceDocumentBillingCode"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".CompensationNote.referenceDocumentAmount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="referenceDocumentAmountreferenceDocumentBillingCode"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtsaXN0WlJNQ0FfT19QUk9EfQ0KPGl0ZW0+PFBST0RVQ1RPPiR7cHJvZHVjdG8ucmVzdWx0fTwvUFJPRFVDVE8+DQoJPFNBTERPPiR7c2FsZG8ucmVzdWx0fTwvU0FMRE8+DQo8L2l0ZW0+"/>
                                <L7p:VariableToSet stringValue="listZRMCA_O_PROD"/>
                            </L7p:SetVariable>
                        </L7p:ForEachLoop>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue=""/>
                            <L7p:VariableToSet stringValue="listBillDocument"/>
                        </L7p:SetVariable>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="billDocument" variablePrefix="aux">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthdXguY3VycmVudH0="/>
                                <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="messageInJson"/>
                            </L7p:SetVariable>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.documentType"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="documentType"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.reference"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="reference"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.reference"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="reference"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.organizationName"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="organizationName"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.vendorId"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="vendorId"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.contractID"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="contractID"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.code"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="code"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.taxFlag"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="taxFlag"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.unit"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="unit"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.expirationDate"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="expirationDate"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.totalAmount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="totalAmount"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.amount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="amount"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.MANSP"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="MANSP"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.costCenter"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="costCenter"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.order"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="order"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.ANI"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="ANI"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.serviceType"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="serviceType"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.queueNumber"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="queueNumber"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.netAmount"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="netAmount"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.points"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="points"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".BillDocument.newTotal"/>
                                <L7p:OtherTargetMessageVariable stringValue="messageInJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="newTotal"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtsaXN0QmlsbERvY3VtZW50fQ0KPEJpbGxEb2N1bWVudD48ZG9jdW1lbnRUeXBlPiR7ZG9jdW1lbnRUeXBlLnJlc3VsdH08L2RvY3VtZW50VHlwZT4NCiAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2U+JHtyZWZlcmVuY2UucmVzdWx0fTwvcmVmZXJlbmNlPiAgICAgICAgDQogICAgICAgICAgICAgICAgICA8b3JnYW5pemF0aW9uTmFtZT4ke29yZ2FuaXphdGlvbk5hbWUucmVzdWx0fTwvb3JnYW5pemF0aW9uTmFtZT4gICAgICAgICAgDQogICAgICAgICAgICAgICAgICA8dmVuZG9ySWQ+JHt2ZW5kb3JJZC5yZXN1bHR9PC92ZW5kb3JJZD4gICAgICAgICAgDQogICAgICAgICAgICAgICAgICA8Y29udHJhY3RJRD4ke2NvbnRyYWN0SUQucmVzdWx0fTwvY29udHJhY3RJRD4gICAgICAgIA0KICAgICAgICAgICAgICAgICAgPGNvZGU+JHtjb2RlLnJlc3VsdH08L2NvZGU+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgPHRheEZsYWc+JHt0YXhGbGFnLnJlc3VsdH08L3RheEZsYWc+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgPHVuaXQ+JHt1bml0LnJlc3VsdH08L3VuaXQ+DQogICAgICAgICAgICAgICAgICA8ZXhwaXJhdGlvbkRhdGU+JHtleHBpcmF0aW9uRGF0ZS5yZXN1bHR9PC9leHBpcmF0aW9uRGF0ZT4gICAgICAgIA0KICAgICAgICAgICAgICAgICAgPHRvdGFsQW1vdW50PiR7dG90YWxBbW91bnQucmVzdWx0fTwvdG90YWxBbW91bnQ+ICAgICAgICANCiAgICAgICAgICAgICAgICAgIDxhbW91bnQ+JHthbW91bnQucmVzdWx0fTwvYW1vdW50PiAgICANCiAgICAgICAgICAgICAgICAgIDxNQU5TUD4ke01BTlNQLnJlc3VsdH08LzpNQU5TUD4NCiAgICAgICAgICAgICAgICAgIDxjb3N0Q2VudGVyPiR7Y29zdENlbnRlci5yZXN1bHR9PC9jb3N0Q2VudGVyPiAgIA0KICAgICAgICAgICAgICAgICAgPG9yZGVyPiR7b3JkZXIucmVzdWx0fTwvb3JkZXI+ICANCiAgICAgICAgICAgICAgICAgIDxBTkk+JHtBTkkucmVzdWx0fTwvQU5JPiAgICANCiAgICAgICAgICAgICAgICAgIDxzZXJ2aWNlVHlwZT4ke3NlcnZpY2VUeXBlLnJlc3VsdH08L3NlcnZpY2VUeXBlPiANCiAgICAgICAgICAgICAgICAgIDxxdWV1ZU51bWJlcj4ke3F1ZXVlTnVtYmVyLnJlc3VsdH08L3F1ZXVlTnVtYmVyPg0KICAgICAgICAgICAgICAgICAgPG5ldEFtb3VudD4ke25ldEFtb3VudC5yZXN1bHR9PC9uZXRBbW91bnQ+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgPHBvaW50cz4ke3BvaW50cy5yZXN1bHR9PC9wb2ludHM+ICAgICAgICAgDQogICAgICAgICAgICAgICAgICA8bmV3VG90YWw+JHtuZXdUb3RhbC5yZXN1bHR9PC9uZXdUb3RhbD48L0JpbGxEb2N1bWVudD4="/>
                                <L7p:VariableToSet stringValue="listBillDocument"/>
                            </L7p:SetVariable>
                        </L7p:ForEachLoop>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="xmlMessage"/>
                </L7p:SetVariable>
                <L7p:HttpRoutingAssertion>
                    <L7p:FailOnErrorStatus booleanValue="false"/>
                    <L7p:HttpMethod httpMethod="POST"/>
                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.eUSB.tde.hostname}/ES/11/CreateBillingCharge/v1"/>
                    <L7p:ProxyPassword stringValueNull="null"/>
                    <L7p:ProxyUsername stringValueNull="null"/>
                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Cookie"/>
                            </L7p:item>
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="SOAPAction"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:RequestHeaderRules>
                    <L7p:RequestMsgSrc stringValue="xmlMessage"/>
                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included"/>
                    </L7p:RequestParamRules>
                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Set-Cookie"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:ResponseHeaderRules>
                    <L7p:ResponseMsgDest stringValue="serviceResponse"/>
                    <L7p:SamlAssertionVersion intValue="2"/>
                </L7p:HttpRoutingAssertion>
                <L7p:XslTransformation>
                    <L7p:Direction intValue="-1"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy />
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                    </L7p:ResourceInfo>
                    <L7p:Target target="OTHER"/>
                    <L7p:TransformName stringValue=""/>
                    <L7p:XsltVersion stringValue="1.0"/>
                </L7p:XslTransformation>
                <L7p:XslTransformation>
                    <L7p:Direction intValue="-1"/>
                    <L7p:MsgVarPrefix stringValue="xslt2"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.) or name(.) = 'movilCuenta']">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                    </L7p:ResourceInfo>
                    <L7p:Target target="OTHER"/>
                    <L7p:TransformName stringValue=""/>
                    <L7p:XsltVersion stringValue="1.0"/>
                </L7p:XslTransformation>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2UubWFpbnBhcnR9"/>
                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="responseJson"/>
                </L7p:SetVariable>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".Result.status"/>
                    <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="status"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtzdGF0dXMucmVzdWx0fQ=="/>
                    <L7p:VariableToSet stringValue="status"/>
                </L7p:SetVariable>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                    <L7p:Expression2 stringValue="200"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="200"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status}"/>
                            <L7p:Expression2 stringValue="OK"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="OK"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:Expression stringValue=".GetCreditLimit_RSP.Body"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="bodyResult"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".Result.description"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="description"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbi5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="^\{"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:HardcodedResponse>
                            <L7p:Base64ResponseBody stringValue="ewoJInJlc3VsdCI6IHsKCQkidHJhbnNhY3Rpb25JZCI6ICIke3JlcXVlc3RJZH0iLAoJCSJjb2RlIjogIjIwMCIsCgkJImRlc2NyaXB0aW9uIjogIiR7c3RhdHVzfSIsCgkJImRlc2NyaXB0aW9uRGV0YWlsIjogIiR7ZGVzY3JpcHRpb259IiwKCQkicmVzcG9uc2VUaW1lc3RhbXAiOiAiJHtyZXNwb25zZVRpbWVzdGFtcH0iCgl9Cn0="/>
                            <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        </L7p:HardcodedResponse>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="operacion exitosa"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status}"/>
                            <L7p:Expression2 stringValue="ERROR"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="ERROR"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".SourceError.code"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="code"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlLnJlc3VsdH0="/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".SourceError.description"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="description"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbi5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                            <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${request.http.header.consumerId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${xmlMessage.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.elapsedTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code": "${code.result}",
	"description":"transaccion que finaliza con error",
	"descriptionDetail":"${description.result}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="error de negocio"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="OK"/>
                        </L7p:entry>
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="Código 200."/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="1b3f18a3-5e88-4cae-9fae-44b459727ac1"/>
            </L7p:Include>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="logica"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>