<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:JSONSchema>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/root.json",
  "type": "object",
  "title": "The Root Schema",
  "required": [
    
  ],
  "properties": {
    "CustomerAccount": {
      "$id": "#/properties/CustomerAccount",
      "type": "object",
      "title": "The Customeraccount Schema",
      "required": [
        "Product",
        "ServiceRequest"
      ],
      "properties": {
        "Product": {
          "$id": "#/properties/CustomerAccount/properties/Product",
          "type": "object",
          "title": "The Product Schema",
          "required": [
            "MSISDN",
            "Service"
          ],
          "properties": {
            "MSISDN": {
              "$id": "#/properties/CustomerAccount/properties/Product/properties/MSISDN",
              "type": "object",
              "title": "The Msisdn Schema",
              "required": [
                "SN",
                "Asset"
              ],
              "properties": {
                "SN": {
                  "$id": "#/properties/CustomerAccount/properties/Product/properties/MSISDN/properties/SN",
                  "type": "string",
                  "title": "The Sn Schema",
                  "default": "",
                  "examples": [
                    "200"
                  ],
                  "pattern": "^(.*)$"
                },
                "Asset": {
                  "$id": "#/properties/CustomerAccount/properties/Product/properties/MSISDN/properties/Asset",
                  "type": "object",
                  "title": "The Asset Schema",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "$id": "#/properties/CustomerAccount/properties/Product/properties/MSISDN/properties/Asset/properties/status",
                      "type": "string",
                      "title": "The Status Schema",
                      "default": "",
                      "examples": [
                        "Bloqueado"
                      ],
                      "pattern": "^(.*)$"
                    }
                  }
                }
              }
            },
            "Service": {
              "$id": "#/properties/CustomerAccount/properties/Product/properties/Service",
              "type": "object",
              "title": "The Service Schema",
              "required": [
                "id",
                "serviceCharacteristics",
                "Status"
              ],
              "properties": {
                "id": {
                  "$id": "#/properties/CustomerAccount/properties/Product/properties/Service/properties/id",
                  "type": "string",
                  "title": "The Id Schema",
                  "default": "",
                  "examples": [
                    ""
                  ],
                  "pattern": "^(.*)$"
                },
                "serviceCharacteristics": {
                  "$id": "#/properties/CustomerAccount/properties/Product/properties/Service/properties/serviceCharacteristics",
                  "type": "object",
                  "title": "The Servicecharacteristics Schema",
                  "required": [
                    "description"
                  ],
                  "properties": {
                    "description": {
                      "$id": "#/properties/CustomerAccount/properties/Product/properties/Service/properties/serviceCharacteristics/properties/description",
                      "type": "string",
                      "title": "The Description Schema",
                      "default": "",
                      "examples": [
                        ""
                      ],
                      "pattern": "^(.*)$"
                    }
                  }
                },
                "Status": {
                  "$id": "#/properties/CustomerAccount/properties/Product/properties/Service/properties/Status",
                  "type": "object",
                  "title": "The Status Schema",
                  "required": [
                    "name",
                    "reason"
                  ],
                  "properties": {
                    "name": {
                      "$id": "#/properties/CustomerAccount/properties/Product/properties/Service/properties/Status/properties/name",
                      "type": "string",
                      "title": "The Name Schema",
                      "default": "",
                      "examples": [
                        ""
                      ],
                      "pattern": "^(.*)$"
                    },
                    "reason": {
                      "$id": "#/properties/CustomerAccount/properties/Product/properties/Service/properties/Status/properties/reason",
                      "type": "string",
                      "title": "The Reason Schema",
                      "default": "",
                      "examples": [
                        ""
                      ],
                      "pattern": "^(.*)$"
                    }
                  }
                }
              }
            }
          }
        },
        "ServiceRequest": {
          "$id": "#/properties/CustomerAccount/properties/ServiceRequest",
          "type": "object",
          "title": "The Servicerequest Schema",
          "required": [
            "externalID"
          ],
          "properties": {
            "externalID": {
              "$id": "#/properties/CustomerAccount/properties/ServiceRequest/properties/externalID",
              "type": "string",
              "title": "The Externalid Schema",
              "default": "",
              "examples": [
                ""
              ],
              "pattern": "^(.*)$"
            }
          }
        }
      }
    }
  }
}]]></L7p:Document>
                    </L7p:ResourceInfo>
                </L7p:JSONSchema>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="QTE="/>
                    <L7p:VariableToSet stringValue="code"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="RXNxdWVtYSBJbmNvcnJlY3RvLg=="/>
                    <L7p:VariableToSet stringValue="description"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="RXN0cnVjdHVyYSBkZSBKc29uIGludsOhbGlkbw=="/>
                    <L7p:VariableToSet stringValue="descriptionDetail"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                    <L7p:VariableToSet stringValue="responseTimestamp"/>
                </L7p:SetVariable>
                <L7p:AuditDetailAssertion>
                    <L7p:CustomLoggerSuffix stringValue="entel.api.syslog"/>
                    <L7p:Detail stringValue="TRANSACTION: ${requestId} CODE: ${code} DESCRIPTION: ${description} DETAIL: ${descriptionDetail}"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code":"${code}",
	"description":"${description}",
	"descriptionDetail":"${descriptionDetail}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                    <L7p:HttpStatus stringValue="400"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="Json Schema - Validar ParÃ¡metros"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".SN"/>
                    <L7p:VariablePrefix stringValue="SN"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".status"/>
                    <L7p:VariablePrefix stringValue="status"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".id"/>
                    <L7p:VariablePrefix stringValue="id"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".name"/>
                    <L7p:VariablePrefix stringValue="name"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".reason"/>
                    <L7p:VariablePrefix stringValue="reason"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".description"/>
                    <L7p:VariablePrefix stringValue="description"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".externalID"/>
                    <L7p:VariablePrefix stringValue="externalID"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLnJlcXVlc3RUaW1lc3RhbXB9"/>
                    <L7p:VariableToSet stringValue="Timestamp"/>
                </L7p:SetVariable>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="Timestamp"/>
                    <L7p:Regex stringValue="\-|T|\:|\."/>
                    <L7p:RegexVar stringValue="Timestamp"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:CaptureVar stringValue="Timestamp"/>
                    <L7p:OtherTargetMessageVariable stringValue="Timestamp"/>
                    <L7p:Regex stringValue="^................"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0SWR9"/>
                    <L7p:VariableToSet stringValue="originEventID"/>
                </L7p:SetVariable>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:IncludeEntireExpressionCapture booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="originEventID"/>
                    <L7p:Regex stringValue="\-"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="originEventID"/>
                    <L7p:Regex stringValue="^...."/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="MDAwMA=="/>
                    <L7p:VariableToSet stringValue="originSystem"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="U0NTUzEwMDEyOA=="/>
                    <L7p:VariableToSet stringValue="operationCode"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp2MT0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk0vQ3VzdG9tZXJQYXJ0eUxvZ2ljYWxSZXNvdXJjZVNwZWMvVXBkYXRlL3YxIiB4bWxuczp2MTE9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRVNPL01lc3NhZ2VIZWFkZXIvdjEiIHhtbG5zOnYyPSJodHRwOi8vd3d3LmVudGVsLmNsL0VTTy9SZXN1bHQvdjIiIHhtbG5zOnYxMj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FU08vRXJyb3IvdjEiIHhtbG5zOnYxMz0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk8vTVNJU0ROL3YxIiB4bWxuczp2MTQ9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRUJPL0Fzc2V0L3YxIiB4bWxuczp2MTU9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRUJPL1NlcnZpY2UvdjEiIHhtbG5zOnYxNj0iaHR0cDovL3d3dy5lbnRlbC5jbC9FQk8vU3RhdHVzL3YxIiB4bWxuczp2MTc9Imh0dHA6Ly93d3cuZW50ZWwuY2wvRUJPL0NoYXJhY3RlcmlzdGljcy92MSIgeG1sbnM6djE4PSJodHRwOi8vd3d3LmVudGVsLmNsL0VCTy9TZXJ2aWNlUmVxdWVzdC92MSI+DQogICA8c29hcDpIZWFkZXIvPg0KICAgPHNvYXA6Qm9keT4NCiAgICAgIDx2MTpVcGRhdGVfQ3VzdG9tZXJQYXJ0eUxvZ2ljYWxSZXNvdXJjZVNwZWNfUkVRPg0KICAgICAgICAgPHYxMTpSZXF1ZXN0SGVhZGVyPg0KICAgICAgICAgICAgPHYxMTpDb25zdW1lciBzeXNDb2RlPSIke3JlcXVlc3QuaHR0cC5oZWFkZXIuYXBwbGljYXRpb25Db2RlfSIgZW50ZXJwcmlzZUNvZGU9IkVOVEVMLSR7cmVxdWVzdC5odHRwLmhlYWRlci5jb3VudHJ5Q29kZX0iIGNvdW50cnlDb2RlPSIke3JlcXVlc3QuaHR0cC5oZWFkZXIuY291bnRyeUNvZGV9Ii8+DQogICAgICAgICAgICA8djExOlRyYWNlIGNsaWVudFJlcVRpbWVzdGFtcD0iJHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLnJlcXVlc3RUaW1lc3RhbXB9IiBldmVudElEPSIke29yaWdpblN5c3RlbX0ke29wZXJhdGlvbkNvZGV9JHtUaW1lc3RhbXB9JHtvcmlnaW5FdmVudElkfTAwMDAiPg0KICAgICAgICAgICAgPC92MTE6VHJhY2U+IA0KICAgICAgICAgPC92MTE6UmVxdWVzdEhlYWRlcj4NCiAgICAgICAgIDx2MTpCb2R5Pg0KICAgICAgICAgICAgPHYxOkN1c3RvbWVyQWNjb3VudD4NCiAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgICAgIDx2MTpQcm9kdWN0Pg0KICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgICAgPHYxOk1TSVNETj4NCiAgICAgICAgICAgICAgICAgICAgIDx2MTM6U04+JHtTTi5yZXN1bHR9PC92MTM6U04+DQogICAgICAgICAgICAgICAgICAgICA8djE6QXNzZXQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8djE0OnN0YXR1cz4ke3N0YXR1cy5yZXN1bHR9PC92MTQ6c3RhdHVzPg0KICAgICAgICAgICAgICAgICAgICAgPC92MTpBc3NldD4NCiAgICAgICAgICAgICAgICAgIDwvdjE6TVNJU0ROPg0KICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgICAgPHYxOlNlcnZpY2U+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE1OmlkPiR7aWQucmVzdWx0fTwvdjE1OmlkPg0KICAgICAgICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPg0KICAgICAgICAgICAgICAgICAgICAgPHYxOlN0YXR1cz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx2MTY6bmFtZT4ke25hbWUucmVzdWx0fTwvdjE2Om5hbWU+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8djE2OnJlYXNvbj4ke3JlYXNvbi5yZXN1bHR9PC92MTY6cmVhc29uPg0KICAgICAgICAgICAgICAgICAgICAgPC92MTpTdGF0dXM+DQogICAgICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICAgICA8djE6c2VydmljZUNoYXJhY3RlcmlzdGljcz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx2MTc6ZGVzY3JpcHRpb24+JHtkZXNjcmlwdGlvbi5yZXN1bHR9PC92MTc6ZGVzY3JpcHRpb24+DQogICAgICAgICAgICAgICAgICAgICA8L3YxOnNlcnZpY2VDaGFyYWN0ZXJpc3RpY3M+DQogICAgICAgICAgICAgICAgICA8L3YxOlNlcnZpY2U+DQogICAgICAgICAgICAgICA8L3YxOlByb2R1Y3Q+DQogICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICA8djE6U2VydmljZVJlcXVlc3Q+DQogICAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+DQogICAgICAgICAgICAgICAgICA8djE4OmV4dGVybmFsSUQ+JHtleHRlcm5hbElELnJlc3VsdH08L3YxODpleHRlcm5hbElEPg0KICAgICAgICAgICAgICAgPC92MTpTZXJ2aWNlUmVxdWVzdD4NCiAgICAgICAgICAgIDwvdjE6Q3VzdG9tZXJBY2NvdW50Pg0KICAgICAgICAgPC92MTpCb2R5Pg0KICAgICAgPC92MTpVcGRhdGVfQ3VzdG9tZXJQYXJ0eUxvZ2ljYWxSZXNvdXJjZVNwZWNfUkVRPg0KICAgPC9zb2FwOkJvZHk+DQo8L3NvYXA6RW52ZWxvcGU+"/>
                    <L7p:ContentType stringValue="application/soap+xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="xmlMessage"/>
                </L7p:SetVariable>
                <L7p:Split>
                    <L7p:InputVariable stringValue="request.http.uri"/>
                    <L7p:OutputVariable stringValue="uri"/>
                    <L7p:SplitPattern stringValue="/"/>
                </L7p:Split>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHt1cmlbNl19"/>
                    <L7p:VariableToSet stringValue="MSISDN"/>
                </L7p:SetVariable>
                <L7p:HttpRoutingAssertion>
                    <L7p:FailOnErrorStatus booleanValue="false"/>
                    <L7p:HttpMethod httpMethod="GET"/>
                    <L7p:ProtectedServiceUrl stringValue="http://${gateway.devtest.webPrepago.hostname}/CustomerServiceStatus"/>
                    <L7p:ProxyPassword stringValueNull="null"/>
                    <L7p:ProxyUsername stringValueNull="null"/>
                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Cookie"/>
                            </L7p:item>
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="SOAPAction"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:RequestHeaderRules>
                    <L7p:RequestMsgSrc stringValue="xmlMessage"/>
                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included"/>
                    </L7p:RequestParamRules>
                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                        <L7p:ForwardAll booleanValue="true"/>
                        <L7p:Rules httpPassthroughRules="included">
                            <L7p:item httpPassthroughRule="included">
                                <L7p:Name stringValue="Set-Cookie"/>
                            </L7p:item>
                        </L7p:Rules>
                    </L7p:ResponseHeaderRules>
                    <L7p:ResponseMsgDest stringValue="serviceResponse"/>
                    <L7p:SamlAssertionVersion intValue="2"/>
                </L7p:HttpRoutingAssertion>
                <L7p:XslTransformation>
                    <L7p:Direction intValue="-1"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output indent="yes" method="xml"/>
  <xsl:template match="*">
    <xsl:element name="{local-name(.)}">
      <xsl:apply-templates select="@* | node()"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:attribute name="{local-name(.)}">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
   <xsl:template match="text() | comment() | processing-instruction()">
        <xsl:copy />
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                    </L7p:ResourceInfo>
                    <L7p:Target target="OTHER"/>
                    <L7p:TransformName stringValue=""/>
                    <L7p:XsltVersion stringValue="1.0"/>
                </L7p:XslTransformation>
                <L7p:XslTransformation>
                    <L7p:Direction intValue="-1"/>
                    <L7p:MsgVarPrefix stringValue="xslt2"/>
                    <L7p:OtherTargetMessageVariable stringValue="serviceResponse"/>
                    <L7p:ResourceInfo staticResourceInfo="included">
                        <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="UTF-8" indent="no" media-type="text/x-json" method="text" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <!--contant-->
    <xsl:variable name="d">0123456789</xsl:variable>
    
    <!-- ignore document text -->
    <xsl:template match="text()[preceding-sibling::node() or following-sibling::node()]"/>
    
    <!-- string -->
    <xsl:template match="text()">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="."/>
        </xsl:call-template>
    </xsl:template>
    

    <!-- Main template for escaping strings; used by above template and for object-properties 
        Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
    <xsl:template name="escape-string">
        <xsl:param name="s"/>
        <xsl:text>"</xsl:text>
        <xsl:call-template name="escape-bs-string">
            <xsl:with-param name="s" select="$s"/>
        </xsl:call-template>
        <xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- Escape the backslash (\) before everything else. -->
    <xsl:template name="escape-bs-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'\')">
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'\'),'\\')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-bs-string">
                    <xsl:with-param name="s" select="substring-after($s,'\')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Escape the double quote ("). -->
    <xsl:template name="escape-quot-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <xsl:when test="contains($s,'&quot;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\&quot;')"/>
                </xsl:call-template>
                <xsl:call-template name="escape-quot-string">
                    <xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="$s"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    

    <!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
        or double quote here, because they don't replace characters (&#x0; becomes \t), but they prefix 
        characters (\ becomes \\). Besides, backslash should be seperate anyway, because it should be 
        processed first. This function can't do that. -->
    <xsl:template name="encode-string">
        <xsl:param name="s"/>
        <xsl:choose>
            <!-- tab -->
            <xsl:when test="contains($s,'&#x9;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\t',substring-after($s,'&#x9;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- line feed -->
            <xsl:when test="contains($s,'&#xa;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xa;'),'\n',substring-after($s,'&#xa;'))"/>
                </xsl:call-template>
            </xsl:when>
            <!-- carriage return -->
            <xsl:when test="contains($s,'&#xd;')">
                <xsl:call-template name="encode-string">
                    <xsl:with-param name="s" select="concat(substring-before($s,'&#xd;'),'\r',substring-after($s,'&#xd;'))"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <!-- number (no support for javascript mantise) -->
    <xsl:template match="text()[not(string(number())='NaN')]">
        <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
    </xsl:template>
    
    <!-- boolean, case-insensitive -->
    <xsl:template match="text()[translate(.,'TRUE','true')='true']">true</xsl:template>
    <xsl:template match="text()[translate(.,'FALSE','false')='false']">false</xsl:template>
    

    <!-- item:null -->
    <xsl:template match="*[count(child::node())=0 and not(attribute::node())]">
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="local-name()"/>
        </xsl:call-template>
        <xsl:text>:null</xsl:text>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <!-- object -->
    <xsl:template match="*" name="base">
        <!-- <xsl:if test="not(preceding-sibling::*)">{</xsl:if> -->
        <xsl:call-template name="escape-string">
            <xsl:with-param name="s" select="name()"/>
        </xsl:call-template>
        <xsl:text>:</xsl:text>
        <xsl:choose>
            <xsl:when test="attribute::node() and child::node()">
                <xsl:if test="attribute::node() or child::node()">
                    <xsl:text>{</xsl:text>
                    <xsl:call-template name="handleAttributes">
                        <xsl:with-param name="attrib" select="attribute::*"/>
                    </xsl:call-template>
                    <xsl:if test="attribute::* and child::node()"><xsl:text>, </xsl:text></xsl:if>
                    <xsl:apply-templates select="child::*"/>
                    <xsl:if test="text()">
                        <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                    </xsl:if>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:when>

            <xsl:when test="not(attribute::node()) and child::node()">
                <xsl:if test="child::*">{</xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text() and child::*">
                    <xsl:text>"$" :</xsl:text>
                </xsl:if>
                <xsl:apply-templates select="text()"/>
                <xsl:if test="child::*">}</xsl:if>
            </xsl:when>
            <xsl:when test="attribute::node()">
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates select="text()"/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="following-sibling::*">,</xsl:if>
        <!-- <xsl:if test="not(following-sibling::*)">}</xsl:if> -->
    </xsl:template>
    

    <!-- array -->
    <!-- <xsl:template match="*[count(../*[name(../*)=name(.)])=count(../*) and count(../*)&gt;1]"> -->
    <xsl:template match="*[name(preceding-sibling::*[1]) = name(.) or name(following-sibling::*[1]) = name(.) or name(.) = 'movilCuenta']">
        <xsl:if test="name(.) != name(preceding-sibling::*[1])">
            <xsl:text>"</xsl:text><xsl:value-of select="name(.)"/><xsl:text>": [</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="not(child::node()) and not(attribute::*)">
                <xsl:text>null</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{</xsl:text>
                <xsl:call-template name="handleAttributes">
                    <xsl:with-param name="attrib" select="attribute::*"/>
                </xsl:call-template>
                <xsl:if test="attribute::* and (text() or child::node())"><xsl:text>, </xsl:text></xsl:if>
                <xsl:apply-templates select="child::*"/>
                <xsl:if test="text()">
                    <xsl:text>"$" :</xsl:text><xsl:apply-templates select="text()"/>
                </xsl:if>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="name(.) != name(following-sibling::*[1]) or not(following-sibling::*)">]</xsl:if>
        <xsl:if test="following-sibling::*">,</xsl:if>
    </xsl:template>
    

    <xsl:template name="handleAttributes">
        <xsl:param name="attrib"/>
        <xsl:param name="count" select="count($attrib)"/>
        
        <xsl:for-each select="$attrib">
            <xsl:text>"</xsl:text><xsl:value-of select="name()"/><xsl:text>": </xsl:text>
            <xsl:choose>
                <xsl:when test=".">
                    <xsl:text>"</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>""</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="position() &lt; $count">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    
    <!-- convert root element to an anonymous container -->
    <xsl:template match="/">
            <xsl:text>{</xsl:text><xsl:apply-templates select="node()"/><xsl:text>}</xsl:text>
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                    </L7p:ResourceInfo>
                    <L7p:Target target="OTHER"/>
                    <L7p:TransformName stringValue=""/>
                    <L7p:XsltVersion stringValue="1.0"/>
                </L7p:XslTransformation>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtzZXJ2aWNlUmVzcG9uc2UubWFpbnBhcnR9"/>
                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="responseJson"/>
                </L7p:SetVariable>
                <L7p:EvaluateJsonPathExpression>
                    <L7p:Expression stringValue=".Result.status"/>
                    <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="status"/>
                </L7p:EvaluateJsonPathExpression>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtzdGF0dXMucmVzdWx0fQ=="/>
                    <L7p:VariableToSet stringValue="status"/>
                </L7p:SetVariable>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                    <L7p:Expression2 stringValue="200"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="200"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status}"/>
                            <L7p:Expression2 stringValue="OK"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="OK"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".Body"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="bodyResult"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".Result.description"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="description"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbi5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="^\{|^}"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="200"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:HardcodedResponse>
                            <L7p:Base64ResponseBody stringValue="ewoJInJlc3VsdCI6IHsKCQkidHJhbnNhY3Rpb25JZCI6ICIke3JlcXVlc3RJZH0iLAoJCSJjb2RlIjogIjIwMCIsCgkJImRlc2NyaXB0aW9uIjogIiR7c3RhdHVzLnJlc3VsdH0iLAoJCSJkZXNjcmlwdGlvbkRldGFpbCI6ICIke2Rlc2NyaXB0aW9ufSIsCgkJInJlc3BvbnNlVGltZXN0YW1wIjogIiR7cmVzcG9uc2VUaW1lc3RhbXB9IgoJfQoKfQ=="/>
                            <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        </L7p:HardcodedResponse>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="operacion exitosa"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${status}"/>
                            <L7p:Expression2 stringValue="ERROR"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="ERROR"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".UpdateCustomerPartyLogicalResourceSpec_FRSP.ResponseHeader.Result.SourceError.code"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="code"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb2RlLnJlc3VsdH0="/>
                            <L7p:VariableToSet stringValue="code"/>
                        </L7p:SetVariable>
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue=".UpdateCustomerPartyLogicalResourceSpec_FRSP.ResponseHeader.Result.SourceError.description"/>
                            <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="description"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtkZXNjcmlwdGlvbi5yZXN1bHR9"/>
                            <L7p:VariableToSet stringValue="description"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="bodyResult.result"/>
                            <L7p:Regex stringValue="^\{|^}"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRpbWUubG9jYWwueXl5eS9NTS9kZCdUJ0hIOm1tOnNzLlNTU30="/>
                            <L7p:VariableToSet stringValue="responseTimestamp"/>
                        </L7p:SetVariable>
                        <L7p:CustomizeErrorResponse>
                            <L7p:Content stringValueReference="inline"><![CDATA[{
"result":{
	"transactionId":"${requestId}",
	"code": "${code.result}",
	"description":"Transaccion que finaliza con error",
	"descriptionDetail":"${description.result}",
	"responseTimestamp":"${responseTimestamp}"
	}
}]]></L7p:Content>
                            <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                            <L7p:ExtraHeaders nameValuePairArray="included"/>
                            <L7p:HttpStatus stringValue="422"/>
                        </L7p:CustomizeErrorResponse>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.elapsedTime}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:RaiseError/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="error de negocio"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="OK"/>
                        </L7p:entry>
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="CÃ³digo 200."/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="500"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:Expression stringValue=".Update_CustomerPartyLogicalResourceSpec_FRSP"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:EvaluateJsonPathExpression>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${status.result}"/>
                                <L7p:Expression2 stringValue="WARNING"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="WARNING"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <L7p:AuditDetailAssertion>
                                <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${request.http.header.consumerId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:CustomizeErrorResponse>
                                <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "422",
        "description": "Entidad no procesada",
        "descriptionDetail": "La solicitud estÃ¡ bien formada pero fue imposible seguirla debido a errores semÃ¡nticos",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                                <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                <L7p:ExtraHeaders nameValuePairArray="included"/>
                                <L7p:HttpStatus stringValue="422"/>
                            </L7p:CustomizeErrorResponse>
                            <L7p:RaiseError/>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${status.result}"/>
                                <L7p:Expression2 stringValue="ERROR"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="ERROR"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".SourceError.code"/>
                                <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="sourceCode"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:EvaluateJsonPathExpression>
                                <L7p:Expression stringValue=".SourceError.description"/>
                                <L7p:OtherTargetMessageVariable stringValue="responseJson"/>
                                <L7p:Target target="OTHER"/>
                                <L7p:VariablePrefix stringValue="sourceDescription"/>
                            </L7p:EvaluateJsonPathExpression>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtzb3VyY2VDb2RlLnJlc3VsdH0="/>
                                <L7p:VariableToSet stringValue="code"/>
                            </L7p:SetVariable>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="RXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3I="/>
                                <L7p:VariableToSet stringValue="description"/>
                            </L7p:SetVariable>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtzb3VyY2VEZXNjcmlwdGlvbi5yZXN1bHR9"/>
                                <L7p:VariableToSet stringValue="descriptionDetail"/>
                            </L7p:SetVariable>
                            <L7p:AuditDetailAssertion>
                                <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                                <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${request.http.header.consumerId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:CustomizeErrorResponse>
                                <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "${code}",
        "description": "${description}",
        "descriptionDetail": "${descriptionDetail}",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                                <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                                <L7p:ExtraHeaders nameValuePairArray="included"/>
                            </L7p:CustomizeErrorResponse>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.response.code"/>
                                    <L7p:value stringValue="422"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                    <L7p:value stringValue="${request.routingTotalTime}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:RaiseError/>
                        </wsp:All>
                    </wsp:OneOrMore>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="400"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                        <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${request.http.header.consumerId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                        <L7p:Level stringValue="WARNING"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Encapsulated>
                        <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                        <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                        <L7p:Parameters mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.response.code"/>
                                <L7p:value stringValue="${httpRouting.reasonCode}"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                <L7p:value stringValue="${request.routingTotalTime}"/>
                            </L7p:entry>
                        </L7p:Parameters>
                    </L7p:Encapsulated>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "400",
        "description": "PeticiÃ³n incorrecta",
        "descriptionDetail": "La peticiÃ³n contiene sintaxis errÃ³nea y no deberÃ­a repetirse",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                        <L7p:HttpStatus stringValue="400"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="404"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                        <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${request.http.header.consumerId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                        <L7p:Level stringValue="WARNING"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Encapsulated>
                        <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                        <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                        <L7p:Parameters mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.response.code"/>
                                <L7p:value stringValue="${httpRouting.reasonCode}"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                <L7p:value stringValue="${request.routingTotalTime}"/>
                            </L7p:entry>
                        </L7p:Parameters>
                    </L7p:Encapsulated>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "404",
        "description": "No encontrado",
        "descriptionDetail": "Recurso no encontrado",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                        <L7p:HttpStatus stringValue="404"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${httpRouting.reasonCode}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="int"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="422"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="entel.api.syslog.error"/>
                        <L7p:Detail stringValue="REQUESTID: ${requestId} | EVENTID: ${request.http.header.consumerId} | APIM ${service.name} Route Failed | IS STATUS: ${httpRouting.reasonCode} | IS URI: ${httpRouting.url} | IS REQUEST: ${message.mainpart} | IS RESPONSE: ${serviceResponse.mainpart} | TIMESTAMP: ${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"/>
                        <L7p:Level stringValue="WARNING"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Encapsulated>
                        <L7p:EncapsulatedAssertionConfigGuid stringValue="2873d7c1-bfb2-42b8-ab9a-35767965de80"/>
                        <L7p:EncapsulatedAssertionConfigName stringValue="API Portal Integration - Post Route"/>
                        <L7p:Parameters mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.response.code"/>
                                <L7p:value stringValue="${httpRouting.reasonCode}"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="portal.analytics.routingTotalTime"/>
                                <L7p:value stringValue="${request.routingTotalTime}"/>
                            </L7p:entry>
                        </L7p:Parameters>
                    </L7p:Encapsulated>
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{
    "result": {
        "transactionId": "${requestId}",
        "code": "422",
        "description": "Entidad no procesada",
        "descriptionDetail": "La solicitud estÃ¡ bien formada pero fue imposible seguirla debido a errores semÃ¡nticos",
        "responseTimestamp": "${request.time.local.yyyy-MM-dd'T'HH:mm:ss.SSS}"
    }
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                        <L7p:HttpStatus stringValue="422"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                </wsp:All>
                <L7p:Include>
                    <L7p:PolicyGuid stringValue="1b3f18a3-5e88-4cae-9fae-44b459727ac1"/>
                </L7p:Include>
            </wsp:OneOrMore>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="logica"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>